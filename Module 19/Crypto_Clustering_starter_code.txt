{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Import required libraries and dependencies\n",
    "import pandas as pd\n",
    "import hvplot.pandas\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.cluster import KMeans\n",
    "from sklearn.decomposition import PCA\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>price_change_percentage_24h</th>\n",
       "      <th>price_change_percentage_7d</th>\n",
       "      <th>price_change_percentage_14d</th>\n",
       "      <th>price_change_percentage_30d</th>\n",
       "      <th>price_change_percentage_60d</th>\n",
       "      <th>price_change_percentage_200d</th>\n",
       "      <th>price_change_percentage_1y</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>coin_id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>bitcoin</th>\n",
       "      <td>1.08388</td>\n",
       "      <td>7.60278</td>\n",
       "      <td>6.57509</td>\n",
       "      <td>7.67258</td>\n",
       "      <td>-3.25185</td>\n",
       "      <td>83.51840</td>\n",
       "      <td>37.51761</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ethereum</th>\n",
       "      <td>0.22392</td>\n",
       "      <td>10.38134</td>\n",
       "      <td>4.80849</td>\n",
       "      <td>0.13169</td>\n",
       "      <td>-12.88890</td>\n",
       "      <td>186.77418</td>\n",
       "      <td>101.96023</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tether</th>\n",
       "      <td>-0.21173</td>\n",
       "      <td>0.04935</td>\n",
       "      <td>0.00640</td>\n",
       "      <td>-0.04237</td>\n",
       "      <td>0.28037</td>\n",
       "      <td>-0.00542</td>\n",
       "      <td>0.01954</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ripple</th>\n",
       "      <td>-0.37819</td>\n",
       "      <td>-0.60926</td>\n",
       "      <td>2.24984</td>\n",
       "      <td>0.23455</td>\n",
       "      <td>-17.55245</td>\n",
       "      <td>39.53888</td>\n",
       "      <td>-16.60193</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bitcoin-cash</th>\n",
       "      <td>2.90585</td>\n",
       "      <td>17.09717</td>\n",
       "      <td>14.75334</td>\n",
       "      <td>15.74903</td>\n",
       "      <td>-13.71793</td>\n",
       "      <td>21.66042</td>\n",
       "      <td>14.49384</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>binancecoin</th>\n",
       "      <td>2.10423</td>\n",
       "      <td>12.85511</td>\n",
       "      <td>6.80688</td>\n",
       "      <td>0.05865</td>\n",
       "      <td>36.33486</td>\n",
       "      <td>155.61937</td>\n",
       "      <td>69.69195</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>chainlink</th>\n",
       "      <td>-0.23935</td>\n",
       "      <td>20.69459</td>\n",
       "      <td>9.30098</td>\n",
       "      <td>-11.21747</td>\n",
       "      <td>-43.69522</td>\n",
       "      <td>403.22917</td>\n",
       "      <td>325.13186</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>cardano</th>\n",
       "      <td>0.00322</td>\n",
       "      <td>13.99302</td>\n",
       "      <td>5.55476</td>\n",
       "      <td>10.10553</td>\n",
       "      <td>-22.84776</td>\n",
       "      <td>264.51418</td>\n",
       "      <td>156.09756</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>litecoin</th>\n",
       "      <td>-0.06341</td>\n",
       "      <td>6.60221</td>\n",
       "      <td>7.28931</td>\n",
       "      <td>1.21662</td>\n",
       "      <td>-17.23960</td>\n",
       "      <td>27.49919</td>\n",
       "      <td>-12.66408</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bitcoin-cash-sv</th>\n",
       "      <td>0.92530</td>\n",
       "      <td>3.29641</td>\n",
       "      <td>-1.86656</td>\n",
       "      <td>2.88926</td>\n",
       "      <td>-24.87434</td>\n",
       "      <td>7.42562</td>\n",
       "      <td>93.73082</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 price_change_percentage_24h  price_change_percentage_7d  \\\n",
       "coin_id                                                                    \n",
       "bitcoin                              1.08388                     7.60278   \n",
       "ethereum                             0.22392                    10.38134   \n",
       "tether                              -0.21173                     0.04935   \n",
       "ripple                              -0.37819                    -0.60926   \n",
       "bitcoin-cash                         2.90585                    17.09717   \n",
       "binancecoin                          2.10423                    12.85511   \n",
       "chainlink                           -0.23935                    20.69459   \n",
       "cardano                              0.00322                    13.99302   \n",
       "litecoin                            -0.06341                     6.60221   \n",
       "bitcoin-cash-sv                      0.92530                     3.29641   \n",
       "\n",
       "                 price_change_percentage_14d  price_change_percentage_30d  \\\n",
       "coin_id                                                                     \n",
       "bitcoin                              6.57509                      7.67258   \n",
       "ethereum                             4.80849                      0.13169   \n",
       "tether                               0.00640                     -0.04237   \n",
       "ripple                               2.24984                      0.23455   \n",
       "bitcoin-cash                        14.75334                     15.74903   \n",
       "binancecoin                          6.80688                      0.05865   \n",
       "chainlink                            9.30098                    -11.21747   \n",
       "cardano                              5.55476                     10.10553   \n",
       "litecoin                             7.28931                      1.21662   \n",
       "bitcoin-cash-sv                     -1.86656                      2.88926   \n",
       "\n",
       "                 price_change_percentage_60d  price_change_percentage_200d  \\\n",
       "coin_id                                                                      \n",
       "bitcoin                             -3.25185                      83.51840   \n",
       "ethereum                           -12.88890                     186.77418   \n",
       "tether                               0.28037                      -0.00542   \n",
       "ripple                             -17.55245                      39.53888   \n",
       "bitcoin-cash                       -13.71793                      21.66042   \n",
       "binancecoin                         36.33486                     155.61937   \n",
       "chainlink                          -43.69522                     403.22917   \n",
       "cardano                            -22.84776                     264.51418   \n",
       "litecoin                           -17.23960                      27.49919   \n",
       "bitcoin-cash-sv                    -24.87434                       7.42562   \n",
       "\n",
       "                 price_change_percentage_1y  \n",
       "coin_id                                      \n",
       "bitcoin                            37.51761  \n",
       "ethereum                          101.96023  \n",
       "tether                              0.01954  \n",
       "ripple                            -16.60193  \n",
       "bitcoin-cash                       14.49384  \n",
       "binancecoin                        69.69195  \n",
       "chainlink                         325.13186  \n",
       "cardano                           156.09756  \n",
       "litecoin                          -12.66408  \n",
       "bitcoin-cash-sv                    93.73082  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Load the data into a Pandas DataFrame\n",
    "df_market_data = pd.read_csv(\n",
    "    \"Resources/crypto_market_data.csv\",\n",
    "    index_col=\"coin_id\")\n",
    "\n",
    "# Display sample data\n",
    "df_market_data.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>price_change_percentage_24h</th>\n",
       "      <th>price_change_percentage_7d</th>\n",
       "      <th>price_change_percentage_14d</th>\n",
       "      <th>price_change_percentage_30d</th>\n",
       "      <th>price_change_percentage_60d</th>\n",
       "      <th>price_change_percentage_200d</th>\n",
       "      <th>price_change_percentage_1y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>41.000000</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>41.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>-0.269686</td>\n",
       "      <td>4.497147</td>\n",
       "      <td>0.185787</td>\n",
       "      <td>1.545693</td>\n",
       "      <td>-0.094119</td>\n",
       "      <td>236.537432</td>\n",
       "      <td>347.667956</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>2.694793</td>\n",
       "      <td>6.375218</td>\n",
       "      <td>8.376939</td>\n",
       "      <td>26.344218</td>\n",
       "      <td>47.365803</td>\n",
       "      <td>435.225304</td>\n",
       "      <td>1247.842884</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>-13.527860</td>\n",
       "      <td>-6.094560</td>\n",
       "      <td>-18.158900</td>\n",
       "      <td>-34.705480</td>\n",
       "      <td>-44.822480</td>\n",
       "      <td>-0.392100</td>\n",
       "      <td>-17.567530</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>-0.608970</td>\n",
       "      <td>0.047260</td>\n",
       "      <td>-5.026620</td>\n",
       "      <td>-10.438470</td>\n",
       "      <td>-25.907990</td>\n",
       "      <td>21.660420</td>\n",
       "      <td>0.406170</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>-0.063410</td>\n",
       "      <td>3.296410</td>\n",
       "      <td>0.109740</td>\n",
       "      <td>-0.042370</td>\n",
       "      <td>-7.544550</td>\n",
       "      <td>83.905200</td>\n",
       "      <td>69.691950</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.612090</td>\n",
       "      <td>7.602780</td>\n",
       "      <td>5.510740</td>\n",
       "      <td>4.578130</td>\n",
       "      <td>0.657260</td>\n",
       "      <td>216.177610</td>\n",
       "      <td>168.372510</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>4.840330</td>\n",
       "      <td>20.694590</td>\n",
       "      <td>24.239190</td>\n",
       "      <td>140.795700</td>\n",
       "      <td>223.064370</td>\n",
       "      <td>2227.927820</td>\n",
       "      <td>7852.089700</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       price_change_percentage_24h  price_change_percentage_7d  \\\n",
       "count                    41.000000                   41.000000   \n",
       "mean                     -0.269686                    4.497147   \n",
       "std                       2.694793                    6.375218   \n",
       "min                     -13.527860                   -6.094560   \n",
       "25%                      -0.608970                    0.047260   \n",
       "50%                      -0.063410                    3.296410   \n",
       "75%                       0.612090                    7.602780   \n",
       "max                       4.840330                   20.694590   \n",
       "\n",
       "       price_change_percentage_14d  price_change_percentage_30d  \\\n",
       "count                    41.000000                    41.000000   \n",
       "mean                      0.185787                     1.545693   \n",
       "std                       8.376939                    26.344218   \n",
       "min                     -18.158900                   -34.705480   \n",
       "25%                      -5.026620                   -10.438470   \n",
       "50%                       0.109740                    -0.042370   \n",
       "75%                       5.510740                     4.578130   \n",
       "max                      24.239190                   140.795700   \n",
       "\n",
       "       price_change_percentage_60d  price_change_percentage_200d  \\\n",
       "count                    41.000000                     41.000000   \n",
       "mean                     -0.094119                    236.537432   \n",
       "std                      47.365803                    435.225304   \n",
       "min                     -44.822480                     -0.392100   \n",
       "25%                     -25.907990                     21.660420   \n",
       "50%                      -7.544550                     83.905200   \n",
       "75%                       0.657260                    216.177610   \n",
       "max                     223.064370                   2227.927820   \n",
       "\n",
       "       price_change_percentage_1y  \n",
       "count                   41.000000  \n",
       "mean                   347.667956  \n",
       "std                   1247.842884  \n",
       "min                    -17.567530  \n",
       "25%                      0.406170  \n",
       "50%                     69.691950  \n",
       "75%                    168.372510  \n",
       "max                   7852.089700  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Generate summary statistics\n",
    "df_market_data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {},
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.holoviews_exec.v0+json": "",
      "text/html": [
       "<div id='1002'>\n",
       "  <div class=\"bk-root\" id=\"aad1b99c-05f5-4c9d-a2ea-9b01865a63da\" data-root-id=\"1002\"></div>\n",
       "</div>\n",
       "<script type=\"application/javascript\">(function(root) {\n",
       "  function embed_document(root) {\n",
       "    var docs_json = {\"c1b2d234-5df4-4b5b-8ca2-dbcba166f353\":{\"defs\":[{\"extends\":null,\"module\":null,\"name\":\"ReactiveHTML1\",\"overrides\":[],\"properties\":[]},{\"extends\":null,\"module\":null,\"name\":\"FlexBox1\",\"overrides\":[],\"properties\":[{\"default\":\"flex-start\",\"kind\":null,\"name\":\"align_content\"},{\"default\":\"flex-start\",\"kind\":null,\"name\":\"align_items\"},{\"default\":\"row\",\"kind\":null,\"name\":\"flex_direction\"},{\"default\":\"wrap\",\"kind\":null,\"name\":\"flex_wrap\"},{\"default\":\"flex-start\",\"kind\":null,\"name\":\"justify_content\"}]},{\"extends\":null,\"module\":null,\"name\":\"GridStack1\",\"overrides\":[],\"properties\":[{\"default\":\"warn\",\"kind\":null,\"name\":\"mode\"},{\"default\":null,\"kind\":null,\"name\":\"ncols\"},{\"default\":null,\"kind\":null,\"name\":\"nrows\"},{\"default\":true,\"kind\":null,\"name\":\"allow_resize\"},{\"default\":true,\"kind\":null,\"name\":\"allow_drag\"},{\"default\":[],\"kind\":null,\"name\":\"state\"}]},{\"extends\":null,\"module\":null,\"name\":\"click1\",\"overrides\":[],\"properties\":[{\"default\":\"\",\"kind\":null,\"name\":\"terminal_output\"},{\"default\":\"\",\"kind\":null,\"name\":\"debug_name\"},{\"default\":0,\"kind\":null,\"name\":\"clears\"}]},{\"extends\":null,\"module\":null,\"name\":\"NotificationAreaBase1\",\"overrides\":[],\"properties\":[{\"default\":\"bottom-right\",\"kind\":null,\"name\":\"position\"},{\"default\":0,\"kind\":null,\"name\":\"_clear\"}]},{\"extends\":null,\"module\":null,\"name\":\"NotificationArea1\",\"overrides\":[],\"properties\":[{\"default\":[],\"kind\":null,\"name\":\"notifications\"},{\"default\":\"bottom-right\",\"kind\":null,\"name\":\"position\"},{\"default\":0,\"kind\":null,\"name\":\"_clear\"},{\"default\":[{\"background\":\"#ffc107\",\"icon\":{\"className\":\"fas fa-exclamation-triangle\",\"color\":\"white\",\"tagName\":\"i\"},\"type\":\"warning\"},{\"background\":\"#007bff\",\"icon\":{\"className\":\"fas fa-info-circle\",\"color\":\"white\",\"tagName\":\"i\"},\"type\":\"info\"}],\"kind\":null,\"name\":\"types\"}]},{\"extends\":null,\"module\":null,\"name\":\"Notification\",\"overrides\":[],\"properties\":[{\"default\":null,\"kind\":null,\"name\":\"background\"},{\"default\":3000,\"kind\":null,\"name\":\"duration\"},{\"default\":null,\"kind\":null,\"name\":\"icon\"},{\"default\":\"\",\"kind\":null,\"name\":\"message\"},{\"default\":null,\"kind\":null,\"name\":\"notification_type\"},{\"default\":false,\"kind\":null,\"name\":\"_destroyed\"}]},{\"extends\":null,\"module\":null,\"name\":\"TemplateActions1\",\"overrides\":[],\"properties\":[{\"default\":0,\"kind\":null,\"name\":\"open_modal\"},{\"default\":0,\"kind\":null,\"name\":\"close_modal\"}]},{\"extends\":null,\"module\":null,\"name\":\"MaterialTemplateActions1\",\"overrides\":[],\"properties\":[{\"default\":0,\"kind\":null,\"name\":\"open_modal\"},{\"default\":0,\"kind\":null,\"name\":\"close_modal\"}]}],\"roots\":{\"references\":[{\"attributes\":{},\"id\":\"1030\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1068\"},\"glyph\":{\"id\":\"1071\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1073\"},\"nonselection_glyph\":{\"id\":\"1072\"},\"selection_glyph\":{\"id\":\"1089\"},\"view\":{\"id\":\"1075\"}},\"id\":\"1074\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_color\":\"#fc4f30\",\"line_width\":2,\"x\":{\"field\":\"coin_id\"},\"y\":{\"field\":\"value\"}},\"id\":\"1071\",\"type\":\"Line\"},{\"attributes\":{\"line_color\":\"#8b8b8b\",\"line_width\":2,\"x\":{\"field\":\"coin_id\"},\"y\":{\"field\":\"value\"}},\"id\":\"1167\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1028\",\"type\":\"SaveTool\"},{\"attributes\":{\"data\":{\"Variable\":[\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\",\"price_change_percentage_24h\"],\"coin_id\":[\"bitcoin\",\"ethereum\",\"tether\",\"ripple\",\"bitcoin-cash\",\"binancecoin\",\"chainlink\",\"cardano\",\"litecoin\",\"bitcoin-cash-sv\",\"crypto-com-chain\",\"usd-coin\",\"eos\",\"monero\",\"tron\",\"tezos\",\"okb\",\"stellar\",\"cosmos\",\"cdai\",\"neo\",\"wrapped-bitcoin\",\"leo-token\",\"huobi-token\",\"nem\",\"binance-usd\",\"iota\",\"vechain\",\"zcash\",\"theta-token\",\"dash\",\"ethereum-classic\",\"ethlend\",\"maker\",\"havven\",\"omisego\",\"celsius-degree-token\",\"ontology\",\"ftx-token\",\"true-usd\",\"digibyte\"],\"value\":{\"__ndarray__\":\"nZ0MjpJX8T8MzXUaaanMP5mByvj3Gcu/wCZr1EM02L8ep+hILj8HQL0Yyol21QBAwhcmUwWjzr//CS5W1GBqP7JGPUSjO7C/QKTfvg6c7T8urYbEPZbjPzeJQWDl0Ma/1pC4x9KHwj87NgLxun7bP90HILWJk7M/JjYf14aK5b83iUFg5dAFwG3i5H6HIvC/5nlwd9Zu7r9i83FtqBjLP+iHEcKjjd8/M9yAzw+j8T/fGtgqweLAv+RmuAGfH9q/UdobfGEy678D7KNTVz67v8YzaOif4No/teBFX0Ga9D8G2Eenrnzjvx+duvJZPhLAoMN8eQH28L+cxCCwcmjdv667eapDDivAX5hMFYxK479EUaBP5EkQwAZkr3d/XBNA0JuKVBgbBEDqBDQRNrz1vxo09E9wseo/tI6qJoi6r79qMA3DR8QHQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[41]}},\"selected\":{\"id\":\"1048\"},\"selection_policy\":{\"id\":\"1062\"}},\"id\":\"1047\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"overlay\":{\"id\":\"1033\"}},\"id\":\"1031\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"data\":{\"Variable\":[\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\",\"price_change_percentage_30d\"],\"coin_id\":[\"bitcoin\",\"ethereum\",\"tether\",\"ripple\",\"bitcoin-cash\",\"binancecoin\",\"chainlink\",\"cardano\",\"litecoin\",\"bitcoin-cash-sv\",\"crypto-com-chain\",\"usd-coin\",\"eos\",\"monero\",\"tron\",\"tezos\",\"okb\",\"stellar\",\"cosmos\",\"cdai\",\"neo\",\"wrapped-bitcoin\",\"leo-token\",\"huobi-token\",\"nem\",\"binance-usd\",\"iota\",\"vechain\",\"zcash\",\"theta-token\",\"dash\",\"ethereum-classic\",\"ethlend\",\"maker\",\"havven\",\"omisego\",\"celsius-degree-token\",\"ontology\",\"ftx-token\",\"true-usd\",\"digibyte\"],\"value\":{\"__ndarray__\":\"VMa/z7iwHkAl6ZrJN9vAP/28qUiFsaW/L26jAbwFzj8dcjPcgH8vQPMf0m9fB64/5bhTOlhvJsBnfjUHCDYkQGWNeohGd/M/sCDNWDQdB0Cmft5UpHIxwJgvL8A+OsW/t0WZDTKJEsDeVKTC2HpDQEzD8BExNSnAjWK5pdVALMDjjcwjf+AkwIrIsIo3QiDAjliLTwFQEkAWpBmLpnMBwE3WqIdo9DXAVG8NbJWAHUAnMQisHJoIQGA8g4b+CQrACcTr+gU7DcCPpQ9dUN+SP80Bgjl6nBDA9S1zuixWLMBC7Eyh83odQEku/yH9bj9AtTf4wmQqH8Am/FI/byoHQNjYJaq3/j3A9GxWfa62MECdRloqb9c0wF4R/G8lOyLArK3YX3aZYUC1/SsrTVpBwP/PYb68ICXAFR3J5T+knz+ndLD+z4EqQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[41]}},\"selected\":{\"id\":\"1115\"},\"selection_policy\":{\"id\":\"1135\"}},\"id\":\"1114\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1032\",\"type\":\"ResetTool\"},{\"attributes\":{\"label\":{\"value\":\"price_change_percentage_30d\"},\"renderers\":[{\"id\":\"1120\"}]},\"id\":\"1138\",\"type\":\"LegendItem\"},{\"attributes\":{\"source\":{\"id\":\"1114\"}},\"id\":\"1121\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1062\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1163\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#9467bd\",\"line_width\":2,\"x\":{\"field\":\"coin_id\"},\"y\":{\"field\":\"value\"}},\"id\":\"1202\",\"type\":\"Line\"},{\"attributes\":{\"bottom_units\":\"screen\",\"coordinates\":null,\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"group\":null,\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1033\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"label\":{\"value\":\"price_change_percentage_200d\"},\"renderers\":[{\"id\":\"1174\"}]},\"id\":\"1196\",\"type\":\"LegendItem\"},{\"attributes\":{\"line_alpha\":0.2,\"line_color\":\"#6d904f\",\"line_width\":2,\"x\":{\"field\":\"coin_id\"},\"y\":{\"field\":\"value\"}},\"id\":\"1119\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1115\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"1168\"}},\"id\":\"1175\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1042\",\"type\":\"CategoricalTickFormatter\"},{\"attributes\":{},\"id\":\"1193\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#17becf\",\"line_width\":2,\"x\":{\"field\":\"coin_id\"},\"y\":{\"field\":\"value\"}},\"id\":\"1172\",\"type\":\"Line\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1114\"},\"glyph\":{\"id\":\"1117\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1119\"},\"nonselection_glyph\":{\"id\":\"1118\"},\"selection_glyph\":{\"id\":\"1139\"},\"view\":{\"id\":\"1121\"}},\"id\":\"1120\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"label\":{\"value\":\"price_change_percentage_24h\"},\"renderers\":[{\"id\":\"1053\"}]},\"id\":\"1066\",\"type\":\"LegendItem\"},{\"attributes\":{\"line_color\":\"#6d904f\",\"line_width\":2,\"x\":{\"field\":\"coin_id\"},\"y\":{\"field\":\"value\"}},\"id\":\"1117\",\"type\":\"Line\"},{\"attributes\":{\"line_color\":\"#9467bd\",\"line_width\":2,\"x\":{\"field\":\"coin_id\"},\"y\":{\"field\":\"value\"}},\"id\":\"1229\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.2,\"line_color\":\"#17becf\",\"line_width\":2,\"x\":{\"field\":\"coin_id\"},\"y\":{\"field\":\"value\"}},\"id\":\"1173\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#e5ae38\",\"line_width\":2,\"x\":{\"field\":\"coin_id\"},\"y\":{\"field\":\"value\"}},\"id\":\"1094\",\"type\":\"Line\"},{\"attributes\":{\"active_drag\":{\"id\":\"1029\"},\"active_scroll\":{\"id\":\"1030\"},\"tools\":[{\"id\":\"1005\"},{\"id\":\"1028\"},{\"id\":\"1029\"},{\"id\":\"1030\"},{\"id\":\"1031\"},{\"id\":\"1032\"}]},\"id\":\"1034\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"1169\",\"type\":\"Selection\"},{\"attributes\":{\"line_color\":\"#fc4f30\",\"line_width\":2,\"x\":{\"field\":\"coin_id\"},\"y\":{\"field\":\"value\"}},\"id\":\"1089\",\"type\":\"Line\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1168\"},\"glyph\":{\"id\":\"1171\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1173\"},\"nonselection_glyph\":{\"id\":\"1172\"},\"selection_glyph\":{\"id\":\"1197\"},\"view\":{\"id\":\"1175\"}},\"id\":\"1174\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_color\":\"#17becf\",\"line_width\":2,\"x\":{\"field\":\"coin_id\"},\"y\":{\"field\":\"value\"}},\"id\":\"1171\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1046\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1045\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#8b8b8b\",\"line_width\":2,\"x\":{\"field\":\"coin_id\"},\"y\":{\"field\":\"value\"}},\"id\":\"1144\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"Variable\":[\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\",\"price_change_percentage_14d\"],\"coin_id\":[\"bitcoin\",\"ethereum\",\"tether\",\"ripple\",\"bitcoin-cash\",\"binancecoin\",\"chainlink\",\"cardano\",\"litecoin\",\"bitcoin-cash-sv\",\"crypto-com-chain\",\"usd-coin\",\"eos\",\"monero\",\"tron\",\"tezos\",\"okb\",\"stellar\",\"cosmos\",\"cdai\",\"neo\",\"wrapped-bitcoin\",\"leo-token\",\"huobi-token\",\"nem\",\"binance-usd\",\"iota\",\"vechain\",\"zcash\",\"theta-token\",\"dash\",\"ethereum-classic\",\"ethlend\",\"maker\",\"havven\",\"omisego\",\"celsius-degree-token\",\"ontology\",\"ftx-token\",\"true-usd\",\"digibyte\"],\"value\":{\"__ndarray__\":\"zQaZZORMGkB5knTN5DsTQC1DHOviNno/ctwpHaz/AUCLic3HtYEtQJgvL8A+OhtACoDxDBqaIkAOhGQBEzgWQICfceFAKB1AIVnABG7d/b8xsfm4NhQhwGtI3GPpQ3e/pfeNrz0z8j8ao3VUNWkyQBUA4xk0dPY/VIzzN6GQAkCXrfVFQhsUwKpla32RUPG/Qgkzbf8KFkDPg7uzdtvFP8MN+PwwsiPAYFlpUgo6GkB3+GuyRh0cwM2v5gDBHN0/jliLTwEwBUDWrZ6T3jeuP7pOIy2VNw7Am1Wfq60oMsAJM23/yioXQJfK2xFOSxrAQE0tW+uL4D9OucK7XET0v0SLbOf7mSPA/pqsUQ/R978vaYzWUZUqwDtT6LzGbirAvodLjjs9OEByUMJM2x8lwJ30vvG1Z8q/ZCMQr+sXvD+7D0BqE0cdwA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[41]}},\"selected\":{\"id\":\"1091\"},\"selection_policy\":{\"id\":\"1109\"}},\"id\":\"1090\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"label\":{\"value\":\"price_change_percentage_14d\"},\"renderers\":[{\"id\":\"1096\"}]},\"id\":\"1112\",\"type\":\"LegendItem\"},{\"attributes\":{\"source\":{\"id\":\"1090\"}},\"id\":\"1097\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1017\",\"type\":\"CategoricalScale\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1047\"},\"glyph\":{\"id\":\"1050\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1052\"},\"nonselection_glyph\":{\"id\":\"1051\"},\"selection_glyph\":{\"id\":\"1067\"},\"view\":{\"id\":\"1054\"}},\"id\":\"1053\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_color\":\"#6d904f\",\"line_width\":2,\"x\":{\"field\":\"coin_id\"},\"y\":{\"field\":\"value\"}},\"id\":\"1139\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1135\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"callback\":null,\"renderers\":[{\"id\":\"1053\"},{\"id\":\"1074\"},{\"id\":\"1096\"},{\"id\":\"1120\"},{\"id\":\"1146\"},{\"id\":\"1174\"},{\"id\":\"1204\"}],\"tags\":[\"hv_created\"],\"tooltips\":[[\"Variable\",\"@{Variable}\"],[\"coin_id\",\"@{coin_id}\"],[\"value\",\"@{value}\"]]},\"id\":\"1005\",\"type\":\"HoverTool\"},{\"attributes\":{\"line_alpha\":0.2,\"line_color\":\"#e5ae38\",\"line_width\":2,\"x\":{\"field\":\"coin_id\"},\"y\":{\"field\":\"value\"}},\"id\":\"1095\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1091\",\"type\":\"Selection\"},{\"attributes\":{\"factors\":[\"bitcoin\",\"ethereum\",\"tether\",\"ripple\",\"bitcoin-cash\",\"binancecoin\",\"chainlink\",\"cardano\",\"litecoin\",\"bitcoin-cash-sv\",\"crypto-com-chain\",\"usd-coin\",\"eos\",\"monero\",\"tron\",\"tezos\",\"okb\",\"stellar\",\"cosmos\",\"cdai\",\"neo\",\"wrapped-bitcoin\",\"leo-token\",\"huobi-token\",\"nem\",\"binance-usd\",\"iota\",\"vechain\",\"zcash\",\"theta-token\",\"dash\",\"ethereum-classic\",\"ethlend\",\"maker\",\"havven\",\"omisego\",\"celsius-degree-token\",\"ontology\",\"ftx-token\",\"true-usd\",\"digibyte\"],\"tags\":[[[\"coin_id\",\"coin_id\",null]]]},\"id\":\"1003\",\"type\":\"FactorRange\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1090\"},\"glyph\":{\"id\":\"1093\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1095\"},\"nonselection_glyph\":{\"id\":\"1094\"},\"selection_glyph\":{\"id\":\"1113\"},\"view\":{\"id\":\"1097\"}},\"id\":\"1096\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1019\",\"type\":\"LinearScale\"},{\"attributes\":{\"line_color\":\"#e5ae38\",\"line_width\":2,\"x\":{\"field\":\"coin_id\"},\"y\":{\"field\":\"value\"}},\"id\":\"1093\",\"type\":\"Line\"},{\"attributes\":{\"line_color\":\"#30a2da\",\"line_width\":2,\"x\":{\"field\":\"coin_id\"},\"y\":{\"field\":\"value\"}},\"id\":\"1050\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"Variable\":[\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\",\"price_change_percentage_200d\"],\"coin_id\":[\"bitcoin\",\"ethereum\",\"tether\",\"ripple\",\"bitcoin-cash\",\"binancecoin\",\"chainlink\",\"cardano\",\"litecoin\",\"bitcoin-cash-sv\",\"crypto-com-chain\",\"usd-coin\",\"eos\",\"monero\",\"tron\",\"tezos\",\"okb\",\"stellar\",\"cosmos\",\"cdai\",\"neo\",\"wrapped-bitcoin\",\"leo-token\",\"huobi-token\",\"nem\",\"binance-usd\",\"iota\",\"vechain\",\"zcash\",\"theta-token\",\"dash\",\"ethereum-classic\",\"ethlend\",\"maker\",\"havven\",\"omisego\",\"celsius-degree-token\",\"ontology\",\"ftx-token\",\"true-usd\",\"digibyte\"],\"value\":{\"__ndarray__\":\"xY8xdy3hVED0piIVxlhnQBe86CtIM3a/9zsUBfrEQ0DTn/1IEak1QPTDCOHRc2NAl3MprqozeUAexM4UOohwQIB9dOrKfztAFhiyutWzHUCN7iB2plZsQIQqNXugFcS/ZHWr56QPMkALe9rhrzBlQH+8V61MnGBA5nlwd9a2RUARHm0csfpDQC+Lic3HJ1VAkj8YeO4/Z0AOvjCZKhjZv2vUQzS61GNAtRX7y+75VEC5GW7A52cwQAPso1NXHkVAKa4q+64Fa0A7NgLxun65P+TaUDHOwVdAyM1wAz7bcEAFwHgGDaNeQH3Qs1k1lYtAOUVHcvnvGEANGvonuMgkQCYZOQvbZ6FAGD4ipkSiVED5MeauZXeDQHi0ccQaSoJAC170FcTYmEB1PGagMmJLQC2yne+nvkxAndfYJaq3tr9R9wFIbSl+QA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[41]}},\"selected\":{\"id\":\"1169\"},\"selection_policy\":{\"id\":\"1193\"}},\"id\":\"1168\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"Variable\":[\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\",\"price_change_percentage_60d\"],\"coin_id\":[\"bitcoin\",\"ethereum\",\"tether\",\"ripple\",\"bitcoin-cash\",\"binancecoin\",\"chainlink\",\"cardano\",\"litecoin\",\"bitcoin-cash-sv\",\"crypto-com-chain\",\"usd-coin\",\"eos\",\"monero\",\"tron\",\"tezos\",\"okb\",\"stellar\",\"cosmos\",\"cdai\",\"neo\",\"wrapped-bitcoin\",\"leo-token\",\"huobi-token\",\"nem\",\"binance-usd\",\"iota\",\"vechain\",\"zcash\",\"theta-token\",\"dash\",\"ethereum-classic\",\"ethlend\",\"maker\",\"havven\",\"omisego\",\"celsius-degree-token\",\"ontology\",\"ftx-token\",\"true-usd\",\"digibyte\"],\"value\":{\"__ndarray__\":\"FvvL7skDCsAs1JrmHccpwKjjMQOV8dE/2qz6XG2NMcBzol2FlG8rwIleRrHcKkJAN8MN+PzYRcBi26LMBtk2wCEf9GxWPTHAq5UJv9TfOMBg5dAi23kwwDygbMoV3qU/l631RUIrPsDNzMzMzNxEQJm7lpAPGhZAms5OBkdpRsBKe4MvTKYGwEsfuqC+zT7APL1SliHOHMC4AZ8fRgjlP9L7xteeCStAFqQZi6azDMCvJeSDni0ewDeOWItPQQvAXvQVpBm3VEDaOGItPgW4PwpLPKBsQkHAaw4QzNHPRcAJM23/yoo0wBmQvd79AVRAfa62Yn85OsBVGFsIcug5wLCsNCkFHQFA529CIQKeMsA0uoPYmbZDwPKwUGua0VNA/pqsUQ/ia0Ao8iTpmllAwFuxv+yenBdAmrFoOjsZ0D8s1JrmHRc/wA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[41]}},\"selected\":{\"id\":\"1141\"},\"selection_policy\":{\"id\":\"1163\"}},\"id\":\"1140\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"line_color\":\"#17becf\",\"line_width\":2,\"x\":{\"field\":\"coin_id\"},\"y\":{\"field\":\"value\"}},\"id\":\"1197\",\"type\":\"Line\"},{\"attributes\":{\"below\":[{\"id\":\"1021\"}],\"center\":[{\"id\":\"1023\"},{\"id\":\"1027\"}],\"height\":400,\"left\":[{\"id\":\"1024\"}],\"margin\":[5,5,5,5],\"min_border_bottom\":10,\"min_border_left\":10,\"min_border_right\":10,\"min_border_top\":10,\"renderers\":[{\"id\":\"1053\"},{\"id\":\"1074\"},{\"id\":\"1096\"},{\"id\":\"1120\"},{\"id\":\"1146\"},{\"id\":\"1174\"},{\"id\":\"1204\"}],\"right\":[{\"id\":\"1065\"}],\"sizing_mode\":\"fixed\",\"title\":{\"id\":\"1013\"},\"toolbar\":{\"id\":\"1034\"},\"width\":800,\"x_range\":{\"id\":\"1003\"},\"x_scale\":{\"id\":\"1017\"},\"y_range\":{\"id\":\"1004\"},\"y_scale\":{\"id\":\"1019\"}},\"id\":\"1012\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"label\":{\"value\":\"price_change_percentage_60d\"},\"renderers\":[{\"id\":\"1146\"}]},\"id\":\"1166\",\"type\":\"LegendItem\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#fc4f30\",\"line_width\":2,\"x\":{\"field\":\"coin_id\"},\"y\":{\"field\":\"value\"}},\"id\":\"1072\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1140\"}},\"id\":\"1147\",\"type\":\"CDSView\"},{\"attributes\":{\"line_color\":\"#30a2da\",\"line_width\":2,\"x\":{\"field\":\"coin_id\"},\"y\":{\"field\":\"value\"}},\"id\":\"1067\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.2,\"line_color\":\"#30a2da\",\"line_width\":2,\"x\":{\"field\":\"coin_id\"},\"y\":{\"field\":\"value\"}},\"id\":\"1052\",\"type\":\"Line\"},{\"attributes\":{\"data\":{\"Variable\":[\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\",\"price_change_percentage_7d\"],\"coin_id\":[\"bitcoin\",\"ethereum\",\"tether\",\"ripple\",\"bitcoin-cash\",\"binancecoin\",\"chainlink\",\"cardano\",\"litecoin\",\"bitcoin-cash-sv\",\"crypto-com-chain\",\"usd-coin\",\"eos\",\"monero\",\"tron\",\"tezos\",\"okb\",\"stellar\",\"cosmos\",\"cdai\",\"neo\",\"wrapped-bitcoin\",\"leo-token\",\"huobi-token\",\"nem\",\"binance-usd\",\"iota\",\"vechain\",\"zcash\",\"theta-token\",\"dash\",\"ethereum-classic\",\"ethlend\",\"maker\",\"havven\",\"omisego\",\"celsius-degree-token\",\"ontology\",\"ftx-token\",\"true-usd\",\"digibyte\"],\"value\":{\"__ndarray__\":\"RbsKKT9pHkAzUBn/PsMkQL99HThnRKk/yVnY0w5/47/+JhQi4BgxQBL3WPrQtSlA7yB2ptCxNEA/jBAebfwrQPFL/bypaBpArKjBNAxfCkByv0NRoK8WwPlJtU/HY76/lPsdigL99L+n6Egu/5EvQE1KQbeX9BBA0m9fB87pIUBlU67wLjcSwKbtX1lpkgBAZwqd19gVMEBcIEHxY8ytP3wnZr0YigNAOh4zUBmfHUD3Hi457pT1vzNQGf8+4/k/kQ96Nqs+6781Y9F0djKoP2dEaW/wRRhAgXhdv2A3/L/8GHPXErIkQP8JLlbUYBjAVU0QdR9gFEDRlnMprmoIQGCrBIvD2RBAAiuHFtlOIECbG9MTllgRQKhXyjLEURtAqn06HjNQ4z+UvDrHgGzzvwltOZfiahxAsD2zJEBNxT8yj/zBwHPlPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[41]}},\"selected\":{\"id\":\"1069\"},\"selection_policy\":{\"id\":\"1085\"}},\"id\":\"1068\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"Variable\":[\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\",\"price_change_percentage_1y\"],\"coin_id\":[\"bitcoin\",\"ethereum\",\"tether\",\"ripple\",\"bitcoin-cash\",\"binancecoin\",\"chainlink\",\"cardano\",\"litecoin\",\"bitcoin-cash-sv\",\"crypto-com-chain\",\"usd-coin\",\"eos\",\"monero\",\"tron\",\"tezos\",\"okb\",\"stellar\",\"cosmos\",\"cdai\",\"neo\",\"wrapped-bitcoin\",\"leo-token\",\"huobi-token\",\"nem\",\"binance-usd\",\"iota\",\"vechain\",\"zcash\",\"theta-token\",\"dash\",\"ethereum-classic\",\"ethlend\",\"maker\",\"havven\",\"omisego\",\"celsius-degree-token\",\"ontology\",\"ftx-token\",\"true-usd\",\"digibyte\"],\"value\":{\"__ndarray__\":\"kQpjC0HCQkDWqIdodH1ZQN/42jNLApQ/NXugFRiaMMDN6bKY2PwsQOcdp+hIbFFAaTo7GRxSdEC6LCY2H4NjQPnaM0sCVCnA0NA/wcVuV0CQvd798RBzQL4wmSoYlci/t39lpUmRMcDovMYuUaFhQEPKT6p9nk1A6PaSxmiAYUBdUN8yp75hQMzuycNCnStAw7ZFmQ2cVEAHsTOFzmvSvx/0bFZ9aWBAhhvw+WHEQkAN/RNcrAA1QN8Vwf9WkjhAS7A4nPkWaUAVUn5S7dPBPzUk7rH04Q/AIsMq3shbaUBf0hito7hUQPyMCwcC64VAzsKedvirA8Dwoq8gzTgmQHRGlPYWrL5Ayk+qfTpOJUDfiVkvRjaFQEfJq3MMC3RAnFCIgONmn0CsVib8Uk8pwNttF5rrC2VAyXGndLD+2T/ZfFwbKgxnQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[41]}},\"selected\":{\"id\":\"1199\"},\"selection_policy\":{\"id\":\"1225\"}},\"id\":\"1198\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"end\":8641.780918,\"reset_end\":8641.780918,\"reset_start\":-834.5136980000001,\"start\":-834.5136980000001,\"tags\":[[[\"value\",\"value\",null]]]},\"id\":\"1004\",\"type\":\"Range1d\"},{\"attributes\":{\"line_alpha\":0.2,\"line_color\":\"#8b8b8b\",\"line_width\":2,\"x\":{\"field\":\"coin_id\"},\"y\":{\"field\":\"value\"}},\"id\":\"1145\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1047\"}},\"id\":\"1054\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1141\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1225\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"click_policy\":\"mute\",\"coordinates\":null,\"group\":null,\"items\":[{\"id\":\"1066\"},{\"id\":\"1088\"},{\"id\":\"1112\"},{\"id\":\"1138\"},{\"id\":\"1166\"},{\"id\":\"1196\"},{\"id\":\"1228\"}],\"location\":[0,0],\"title\":\"Variable\"},\"id\":\"1065\",\"type\":\"Legend\"},{\"attributes\":{\"label\":{\"value\":\"price_change_percentage_1y\"},\"renderers\":[{\"id\":\"1204\"}]},\"id\":\"1228\",\"type\":\"LegendItem\"},{\"attributes\":{\"source\":{\"id\":\"1198\"}},\"id\":\"1205\",\"type\":\"CDSView\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1140\"},\"glyph\":{\"id\":\"1143\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1145\"},\"nonselection_glyph\":{\"id\":\"1144\"},\"selection_glyph\":{\"id\":\"1167\"},\"view\":{\"id\":\"1147\"}},\"id\":\"1146\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_color\":\"#8b8b8b\",\"line_width\":2,\"x\":{\"field\":\"coin_id\"},\"y\":{\"field\":\"value\"}},\"id\":\"1143\",\"type\":\"Line\"},{\"attributes\":{\"label\":{\"value\":\"price_change_percentage_7d\"},\"renderers\":[{\"id\":\"1074\"}]},\"id\":\"1088\",\"type\":\"LegendItem\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#6d904f\",\"line_width\":2,\"x\":{\"field\":\"coin_id\"},\"y\":{\"field\":\"value\"}},\"id\":\"1118\",\"type\":\"Line\"},{\"attributes\":{\"source\":{\"id\":\"1068\"}},\"id\":\"1075\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1043\",\"type\":\"AllLabels\"},{\"attributes\":{\"children\":[{\"id\":\"1012\"}],\"height\":400,\"margin\":[0,0,0,0],\"name\":\"Row01047\",\"sizing_mode\":\"fixed\",\"tags\":[\"embedded\"],\"width\":800},\"id\":\"1002\",\"type\":\"Row\"},{\"attributes\":{\"line_alpha\":0.2,\"line_color\":\"#9467bd\",\"line_width\":2,\"x\":{\"field\":\"coin_id\"},\"y\":{\"field\":\"value\"}},\"id\":\"1203\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1109\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1199\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1048\",\"type\":\"Selection\"},{\"attributes\":{\"axis_label\":\"coin_id\",\"coordinates\":null,\"formatter\":{\"id\":\"1042\"},\"group\":null,\"major_label_orientation\":1.5707963267948966,\"major_label_policy\":{\"id\":\"1043\"},\"ticker\":{\"id\":\"1022\"}},\"id\":\"1021\",\"type\":\"CategoricalAxis\"},{\"attributes\":{\"line_color\":\"#e5ae38\",\"line_width\":2,\"x\":{\"field\":\"coin_id\"},\"y\":{\"field\":\"value\"}},\"id\":\"1113\",\"type\":\"Line\"},{\"attributes\":{\"coordinates\":null,\"group\":null,\"text_color\":\"black\",\"text_font_size\":\"12pt\"},\"id\":\"1013\",\"type\":\"Title\"},{\"attributes\":{\"line_alpha\":0.2,\"line_color\":\"#fc4f30\",\"line_width\":2,\"x\":{\"field\":\"coin_id\"},\"y\":{\"field\":\"value\"}},\"id\":\"1073\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1022\",\"type\":\"CategoricalTicker\"},{\"attributes\":{},\"id\":\"1069\",\"type\":\"Selection\"},{\"attributes\":{\"axis\":{\"id\":\"1021\"},\"coordinates\":null,\"grid_line_color\":null,\"group\":null,\"ticker\":null},\"id\":\"1023\",\"type\":\"Grid\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#30a2da\",\"line_width\":2,\"x\":{\"field\":\"coin_id\"},\"y\":{\"field\":\"value\"}},\"id\":\"1051\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1085\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1029\",\"type\":\"PanTool\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1198\"},\"glyph\":{\"id\":\"1201\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1203\"},\"nonselection_glyph\":{\"id\":\"1202\"},\"selection_glyph\":{\"id\":\"1229\"},\"view\":{\"id\":\"1205\"}},\"id\":\"1204\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis_label\":\"\",\"coordinates\":null,\"formatter\":{\"id\":\"1045\"},\"group\":null,\"major_label_policy\":{\"id\":\"1046\"},\"ticker\":{\"id\":\"1025\"}},\"id\":\"1024\",\"type\":\"LinearAxis\"},{\"attributes\":{\"line_color\":\"#9467bd\",\"line_width\":2,\"x\":{\"field\":\"coin_id\"},\"y\":{\"field\":\"value\"}},\"id\":\"1201\",\"type\":\"Line\"},{\"attributes\":{\"axis\":{\"id\":\"1024\"},\"coordinates\":null,\"dimension\":1,\"grid_line_color\":null,\"group\":null,\"ticker\":null},\"id\":\"1027\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1025\",\"type\":\"BasicTicker\"}],\"root_ids\":[\"1002\"]},\"title\":\"Bokeh Application\",\"version\":\"2.4.3\"}};\n",
       "    var render_items = [{\"docid\":\"c1b2d234-5df4-4b5b-8ca2-dbcba166f353\",\"root_ids\":[\"1002\"],\"roots\":{\"1002\":\"aad1b99c-05f5-4c9d-a2ea-9b01865a63da\"}}];\n",
       "    root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "    for (const render_item of render_items) {\n",
       "      for (const root_id of render_item.root_ids) {\n",
       "\tconst id_el = document.getElementById(root_id)\n",
       "\tif (id_el.children.length && (id_el.children[0].className === 'bk-root')) {\n",
       "\t  const root_el = id_el.children[0]\n",
       "\t  root_el.id = root_el.id + '-rendered'\n",
       "\t}\n",
       "      }\n",
       "    }\n",
       "  }\n",
       "  if (root.Bokeh !== undefined && root.Bokeh.Panel !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined && root.Bokeh.Panel !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else if (document.readyState == \"complete\") {\n",
       "        attempts++;\n",
       "        if (attempts > 200) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 25, root)\n",
       "  }\n",
       "})(window);</script>"
      ],
      "text/plain": [
       ":NdOverlay   [Variable]\n",
       "   :Curve   [coin_id]   (value)"
      ]
     },
     "execution_count": 5,
     "metadata": {
      "application/vnd.holoviews_exec.v0+json": {
       "id": "1002"
      }
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Plot your data to see what's in your DataFrame\n",
    "df_market_data.hvplot.line(\n",
    "    width=800,\n",
    "    height=400,\n",
    "    rot=90\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Prepare the Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "column_names = df_market_data.columns.tolist()\n",
    "data_values = df_market_data.values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Use the `StandardScaler()` module from scikit-learn to normalize the data from the CSV file\n",
    "scaler = StandardScaler()\n",
    "scaled_df_market_data = scaler.fit_transform(data_values)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>price_change_percentage_24h</th>\n",
       "      <th>price_change_percentage_7d</th>\n",
       "      <th>price_change_percentage_14d</th>\n",
       "      <th>price_change_percentage_30d</th>\n",
       "      <th>price_change_percentage_60d</th>\n",
       "      <th>price_change_percentage_200d</th>\n",
       "      <th>price_change_percentage_1y</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>coin_id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>bitcoin</th>\n",
       "      <td>0.508529</td>\n",
       "      <td>0.493193</td>\n",
       "      <td>0.772200</td>\n",
       "      <td>0.235460</td>\n",
       "      <td>-0.067495</td>\n",
       "      <td>-0.355953</td>\n",
       "      <td>-0.251637</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ethereum</th>\n",
       "      <td>0.185446</td>\n",
       "      <td>0.934445</td>\n",
       "      <td>0.558692</td>\n",
       "      <td>-0.054341</td>\n",
       "      <td>-0.273483</td>\n",
       "      <td>-0.115759</td>\n",
       "      <td>-0.199352</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tether</th>\n",
       "      <td>0.021774</td>\n",
       "      <td>-0.706337</td>\n",
       "      <td>-0.021680</td>\n",
       "      <td>-0.061030</td>\n",
       "      <td>0.008005</td>\n",
       "      <td>-0.550247</td>\n",
       "      <td>-0.282061</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ripple</th>\n",
       "      <td>-0.040764</td>\n",
       "      <td>-0.810928</td>\n",
       "      <td>0.249458</td>\n",
       "      <td>-0.050388</td>\n",
       "      <td>-0.373164</td>\n",
       "      <td>-0.458259</td>\n",
       "      <td>-0.295546</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bitcoin-cash</th>\n",
       "      <td>1.193036</td>\n",
       "      <td>2.000959</td>\n",
       "      <td>1.760610</td>\n",
       "      <td>0.545842</td>\n",
       "      <td>-0.291203</td>\n",
       "      <td>-0.499848</td>\n",
       "      <td>-0.270317</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>binancecoin</th>\n",
       "      <td>0.891871</td>\n",
       "      <td>1.327295</td>\n",
       "      <td>0.800214</td>\n",
       "      <td>-0.057148</td>\n",
       "      <td>0.778653</td>\n",
       "      <td>-0.188232</td>\n",
       "      <td>-0.225533</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              price_change_percentage_24h  price_change_percentage_7d  \\\n",
       "coin_id                                                                 \n",
       "bitcoin                          0.508529                    0.493193   \n",
       "ethereum                         0.185446                    0.934445   \n",
       "tether                           0.021774                   -0.706337   \n",
       "ripple                          -0.040764                   -0.810928   \n",
       "bitcoin-cash                     1.193036                    2.000959   \n",
       "binancecoin                      0.891871                    1.327295   \n",
       "\n",
       "              price_change_percentage_14d  price_change_percentage_30d  \\\n",
       "coin_id                                                                  \n",
       "bitcoin                          0.772200                     0.235460   \n",
       "ethereum                         0.558692                    -0.054341   \n",
       "tether                          -0.021680                    -0.061030   \n",
       "ripple                           0.249458                    -0.050388   \n",
       "bitcoin-cash                     1.760610                     0.545842   \n",
       "binancecoin                      0.800214                    -0.057148   \n",
       "\n",
       "              price_change_percentage_60d  price_change_percentage_200d  \\\n",
       "coin_id                                                                   \n",
       "bitcoin                         -0.067495                     -0.355953   \n",
       "ethereum                        -0.273483                     -0.115759   \n",
       "tether                           0.008005                     -0.550247   \n",
       "ripple                          -0.373164                     -0.458259   \n",
       "bitcoin-cash                    -0.291203                     -0.499848   \n",
       "binancecoin                      0.778653                     -0.188232   \n",
       "\n",
       "              price_change_percentage_1y  \n",
       "coin_id                                   \n",
       "bitcoin                        -0.251637  \n",
       "ethereum                       -0.199352  \n",
       "tether                         -0.282061  \n",
       "ripple                         -0.295546  \n",
       "bitcoin-cash                   -0.270317  \n",
       "binancecoin                    -0.225533  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create a DataFrame with the scaled data\n",
    "scaled_df = pd.DataFrame(scaled_df_market_data, columns=column_names)\n",
    "\n",
    "# Copy the crypto names from the original data\n",
    "crypto_coin_ids = df_market_data.index\n",
    "\n",
    "# Set the coinid column as index\n",
    "scaled_df.set_index(crypto_coin_ids, inplace=True)\n",
    "\n",
    "# Display sample data\n",
    "scaled_df.head(6)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Find the Best Value for k Using the Original Data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create a list with the number of k-values from 1 to 11\n",
    "k_values = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n",
    "k_values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create an empty list to store the inertia values\n",
    "inertia_values = list()\n",
    "# Create a for loop to compute the inertia with each possible value of k\n",
    "# Inside the loop:\n",
    "# 1. Create a KMeans model using the loop counter for the n_clusters\n",
    "# 2. Fit the model to the data using `df_market_data_scaled`\n",
    "# 3. Append the model.inertia_ to the inertia list\n",
    "for k in range(1, 12):\n",
    "    kmeans_model = KMeans(n_clusters=k)\n",
    "    kmeans_model.fit(scaled_df)\n",
    "    inertia_values.append(kmeans_model.inertia_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create a dictionary with the data to plot the Elbow curve\n",
    "elbow_data = {\n",
    "    'k': k_values,\n",
    "    'inertia': inertia_values\n",
    "}\n",
    "\n",
    "# Create a DataFrame with the data to plot the Elbow curve\n",
    "elbow_df = pd.DataFrame(elbow_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot a line chart with all the inertia values computed with \n",
    "# the different values of k to visually identify the optimal value for k.\n",
    "plt.plot(elbow_df['k'], elbow_df['inertia'], marker='o')\n",
    "plt.xlabel('Number of Clusters (k)')\n",
    "plt.ylabel('Inertia')\n",
    "plt.title('Elbow Curve')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Answer the following question: \n",
    "\n",
    "**Question:** What is the best value for `k`?\n",
    "\n",
    "**Answer:** \n",
    "As given from the elbow curve, as the elbow is formed at 4, therefore, the best value of `k` in this case is **4**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Cluster Cryptocurrencies with K-means Using the Original Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Initialize the K-Means model using the best value for k\n",
    "kmeans_optimal = KMeans(n_clusters=4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KMeans(n_clusters=4)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KMeans</label><div class=\"sk-toggleable__content\"><pre>KMeans(n_clusters=4)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "KMeans(n_clusters=4)"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Fit the K-Means model using the scaled data\n",
    "kmeans_optimal.fit(scaled_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[3 3 0 0 3 3 3 3 3 0 0 0 0 3 0 3 0 0 3 0 0 3 0 0 0 0 0 0 3 0 0 0 1 3 0 0 2\n",
      " 0 0 0 0]\n"
     ]
    }
   ],
   "source": [
    "# Predict the clusters to group the cryptocurrencies using the scaled data\n",
    "cluster_labels = kmeans_optimal.fit_predict(scaled_df)\n",
    "\n",
    "# Print the resulting array of cluster values.\n",
    "print(cluster_labels)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create a copy of the DataFrame\n",
    "scaled_df_copy = scaled_df.copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>price_change_percentage_24h</th>\n",
       "      <th>price_change_percentage_7d</th>\n",
       "      <th>price_change_percentage_14d</th>\n",
       "      <th>price_change_percentage_30d</th>\n",
       "      <th>price_change_percentage_60d</th>\n",
       "      <th>price_change_percentage_200d</th>\n",
       "      <th>price_change_percentage_1y</th>\n",
       "      <th>predicted_cluster</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>coin_id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>bitcoin</th>\n",
       "      <td>0.508529</td>\n",
       "      <td>0.493193</td>\n",
       "      <td>0.772200</td>\n",
       "      <td>0.235460</td>\n",
       "      <td>-0.067495</td>\n",
       "      <td>-0.355953</td>\n",
       "      <td>-0.251637</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ethereum</th>\n",
       "      <td>0.185446</td>\n",
       "      <td>0.934445</td>\n",
       "      <td>0.558692</td>\n",
       "      <td>-0.054341</td>\n",
       "      <td>-0.273483</td>\n",
       "      <td>-0.115759</td>\n",
       "      <td>-0.199352</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tether</th>\n",
       "      <td>0.021774</td>\n",
       "      <td>-0.706337</td>\n",
       "      <td>-0.021680</td>\n",
       "      <td>-0.061030</td>\n",
       "      <td>0.008005</td>\n",
       "      <td>-0.550247</td>\n",
       "      <td>-0.282061</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ripple</th>\n",
       "      <td>-0.040764</td>\n",
       "      <td>-0.810928</td>\n",
       "      <td>0.249458</td>\n",
       "      <td>-0.050388</td>\n",
       "      <td>-0.373164</td>\n",
       "      <td>-0.458259</td>\n",
       "      <td>-0.295546</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bitcoin-cash</th>\n",
       "      <td>1.193036</td>\n",
       "      <td>2.000959</td>\n",
       "      <td>1.760610</td>\n",
       "      <td>0.545842</td>\n",
       "      <td>-0.291203</td>\n",
       "      <td>-0.499848</td>\n",
       "      <td>-0.270317</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              price_change_percentage_24h  price_change_percentage_7d  \\\n",
       "coin_id                                                                 \n",
       "bitcoin                          0.508529                    0.493193   \n",
       "ethereum                         0.185446                    0.934445   \n",
       "tether                           0.021774                   -0.706337   \n",
       "ripple                          -0.040764                   -0.810928   \n",
       "bitcoin-cash                     1.193036                    2.000959   \n",
       "\n",
       "              price_change_percentage_14d  price_change_percentage_30d  \\\n",
       "coin_id                                                                  \n",
       "bitcoin                          0.772200                     0.235460   \n",
       "ethereum                         0.558692                    -0.054341   \n",
       "tether                          -0.021680                    -0.061030   \n",
       "ripple                           0.249458                    -0.050388   \n",
       "bitcoin-cash                     1.760610                     0.545842   \n",
       "\n",
       "              price_change_percentage_60d  price_change_percentage_200d  \\\n",
       "coin_id                                                                   \n",
       "bitcoin                         -0.067495                     -0.355953   \n",
       "ethereum                        -0.273483                     -0.115759   \n",
       "tether                           0.008005                     -0.550247   \n",
       "ripple                          -0.373164                     -0.458259   \n",
       "bitcoin-cash                    -0.291203                     -0.499848   \n",
       "\n",
       "              price_change_percentage_1y  predicted_cluster  \n",
       "coin_id                                                      \n",
       "bitcoin                        -0.251637                  3  \n",
       "ethereum                       -0.199352                  3  \n",
       "tether                         -0.282061                  0  \n",
       "ripple                         -0.295546                  0  \n",
       "bitcoin-cash                   -0.270317                  3  "
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Add a new column to the DataFrame with the predicted clusters\n",
    "scaled_df_copy['predicted_cluster'] = cluster_labels\n",
    "\n",
    "# Display sample data\n",
    "scaled_df_copy.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {},
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.holoviews_exec.v0+json": "",
      "text/html": [
       "<div id='1481'>\n",
       "  <div class=\"bk-root\" id=\"5d5859f4-5651-42f7-898b-0ab6de514b3e\" data-root-id=\"1481\"></div>\n",
       "</div>\n",
       "<script type=\"application/javascript\">(function(root) {\n",
       "  function embed_document(root) {\n",
       "    var docs_json = {\"ed67bc9f-da79-4cbc-a2b6-1d797c028b90\":{\"defs\":[{\"extends\":null,\"module\":null,\"name\":\"ReactiveHTML1\",\"overrides\":[],\"properties\":[]},{\"extends\":null,\"module\":null,\"name\":\"FlexBox1\",\"overrides\":[],\"properties\":[{\"default\":\"flex-start\",\"kind\":null,\"name\":\"align_content\"},{\"default\":\"flex-start\",\"kind\":null,\"name\":\"align_items\"},{\"default\":\"row\",\"kind\":null,\"name\":\"flex_direction\"},{\"default\":\"wrap\",\"kind\":null,\"name\":\"flex_wrap\"},{\"default\":\"flex-start\",\"kind\":null,\"name\":\"justify_content\"}]},{\"extends\":null,\"module\":null,\"name\":\"GridStack1\",\"overrides\":[],\"properties\":[{\"default\":\"warn\",\"kind\":null,\"name\":\"mode\"},{\"default\":null,\"kind\":null,\"name\":\"ncols\"},{\"default\":null,\"kind\":null,\"name\":\"nrows\"},{\"default\":true,\"kind\":null,\"name\":\"allow_resize\"},{\"default\":true,\"kind\":null,\"name\":\"allow_drag\"},{\"default\":[],\"kind\":null,\"name\":\"state\"}]},{\"extends\":null,\"module\":null,\"name\":\"click1\",\"overrides\":[],\"properties\":[{\"default\":\"\",\"kind\":null,\"name\":\"terminal_output\"},{\"default\":\"\",\"kind\":null,\"name\":\"debug_name\"},{\"default\":0,\"kind\":null,\"name\":\"clears\"}]},{\"extends\":null,\"module\":null,\"name\":\"NotificationAreaBase1\",\"overrides\":[],\"properties\":[{\"default\":\"bottom-right\",\"kind\":null,\"name\":\"position\"},{\"default\":0,\"kind\":null,\"name\":\"_clear\"}]},{\"extends\":null,\"module\":null,\"name\":\"NotificationArea1\",\"overrides\":[],\"properties\":[{\"default\":[],\"kind\":null,\"name\":\"notifications\"},{\"default\":\"bottom-right\",\"kind\":null,\"name\":\"position\"},{\"default\":0,\"kind\":null,\"name\":\"_clear\"},{\"default\":[{\"background\":\"#ffc107\",\"icon\":{\"className\":\"fas fa-exclamation-triangle\",\"color\":\"white\",\"tagName\":\"i\"},\"type\":\"warning\"},{\"background\":\"#007bff\",\"icon\":{\"className\":\"fas fa-info-circle\",\"color\":\"white\",\"tagName\":\"i\"},\"type\":\"info\"}],\"kind\":null,\"name\":\"types\"}]},{\"extends\":null,\"module\":null,\"name\":\"Notification\",\"overrides\":[],\"properties\":[{\"default\":null,\"kind\":null,\"name\":\"background\"},{\"default\":3000,\"kind\":null,\"name\":\"duration\"},{\"default\":null,\"kind\":null,\"name\":\"icon\"},{\"default\":\"\",\"kind\":null,\"name\":\"message\"},{\"default\":null,\"kind\":null,\"name\":\"notification_type\"},{\"default\":false,\"kind\":null,\"name\":\"_destroyed\"}]},{\"extends\":null,\"module\":null,\"name\":\"TemplateActions1\",\"overrides\":[],\"properties\":[{\"default\":0,\"kind\":null,\"name\":\"open_modal\"},{\"default\":0,\"kind\":null,\"name\":\"close_modal\"}]},{\"extends\":null,\"module\":null,\"name\":\"MaterialTemplateActions1\",\"overrides\":[],\"properties\":[{\"default\":0,\"kind\":null,\"name\":\"open_modal\"},{\"default\":0,\"kind\":null,\"name\":\"close_modal\"}]}],\"roots\":{\"references\":[{\"attributes\":{\"fill_alpha\":{\"value\":0.2},\"fill_color\":{\"field\":\"color\",\"transform\":{\"id\":\"1515\"}},\"hatch_alpha\":{\"value\":0.2},\"hatch_color\":{\"field\":\"color\",\"transform\":{\"id\":\"1515\"}},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"field\":\"color\",\"transform\":{\"id\":\"1515\"}},\"size\":{\"value\":5.477225575051661},\"x\":{\"field\":\"price_change_percentage_24h\"},\"y\":{\"field\":\"price_change_percentage_7d\"}},\"id\":\"1523\",\"type\":\"Scatter\"},{\"attributes\":{\"end\":2.2155632386560065,\"reset_end\":2.2155632386560065,\"reset_start\":-5.276792781891412,\"start\":-5.276792781891412,\"tags\":[[[\"price_change_percentage_24h\",\"price_change_percentage_24h\",null]]]},\"id\":\"1482\",\"type\":\"Range1d\"},{\"attributes\":{},\"id\":\"1490\",\"type\":\"LinearScale\"},{\"attributes\":{\"axis_label\":\"price_change_percentage_24h\",\"coordinates\":null,\"formatter\":{\"id\":\"1529\"},\"group\":null,\"major_label_policy\":{\"id\":\"1530\"},\"ticker\":{\"id\":\"1495\"}},\"id\":\"1494\",\"type\":\"LinearAxis\"},{\"attributes\":{\"below\":[{\"id\":\"1494\"}],\"center\":[{\"id\":\"1497\"},{\"id\":\"1501\"}],\"height\":300,\"left\":[{\"id\":\"1498\"}],\"margin\":[5,5,5,5],\"min_border_bottom\":10,\"min_border_left\":10,\"min_border_right\":10,\"min_border_top\":10,\"renderers\":[{\"id\":\"1524\"}],\"right\":[{\"id\":\"1527\"}],\"sizing_mode\":\"fixed\",\"title\":{\"id\":\"1486\"},\"toolbar\":{\"id\":\"1508\"},\"width\":700,\"x_range\":{\"id\":\"1482\"},\"x_scale\":{\"id\":\"1490\"},\"y_range\":{\"id\":\"1483\"},\"y_scale\":{\"id\":\"1492\"}},\"id\":\"1485\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1516\"},\"glyph\":{\"id\":\"1519\"},\"group\":null,\"hover_glyph\":{\"id\":\"1522\"},\"muted_glyph\":{\"id\":\"1523\"},\"nonselection_glyph\":{\"id\":\"1520\"},\"selection_glyph\":{\"id\":\"1521\"},\"view\":{\"id\":\"1525\"}},\"id\":\"1524\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"bottom_units\":\"screen\",\"coordinates\":null,\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"group\":null,\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1507\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"fill_color\":{\"field\":\"color\",\"transform\":{\"id\":\"1515\"}},\"hatch_color\":{\"field\":\"color\",\"transform\":{\"id\":\"1515\"}},\"line_color\":{\"field\":\"color\",\"transform\":{\"id\":\"1515\"}},\"size\":{\"value\":5.477225575051661},\"x\":{\"field\":\"price_change_percentage_24h\"},\"y\":{\"field\":\"price_change_percentage_7d\"}},\"id\":\"1522\",\"type\":\"Scatter\"},{\"attributes\":{},\"id\":\"1517\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1542\",\"type\":\"NoOverlap\"},{\"attributes\":{\"bar_line_color\":\"black\",\"color_mapper\":{\"id\":\"1515\"},\"coordinates\":null,\"group\":null,\"label_standoff\":8,\"location\":[0,0],\"major_label_policy\":{\"id\":\"1542\"},\"major_tick_line_color\":\"black\",\"ticker\":{\"id\":\"1526\"}},\"id\":\"1527\",\"type\":\"ColorBar\"},{\"attributes\":{\"children\":[{\"id\":\"1485\"}],\"height\":300,\"margin\":[0,0,0,0],\"name\":\"Row01543\",\"sizing_mode\":\"fixed\",\"tags\":[\"embedded\"],\"width\":700},\"id\":\"1481\",\"type\":\"Row\"},{\"attributes\":{},\"id\":\"1502\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"1504\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"axis_label\":\"price_change_percentage_7d\",\"coordinates\":null,\"formatter\":{\"id\":\"1532\"},\"group\":null,\"major_label_policy\":{\"id\":\"1533\"},\"ticker\":{\"id\":\"1499\"}},\"id\":\"1498\",\"type\":\"LinearAxis\"},{\"attributes\":{\"source\":{\"id\":\"1516\"}},\"id\":\"1525\",\"type\":\"CDSView\"},{\"attributes\":{\"callback\":null,\"renderers\":[{\"id\":\"1524\"}],\"tags\":[\"hv_created\"],\"tooltips\":[[\"price_change_percentage_24h\",\"@{price_change_percentage_24h}\"],[\"price_change_percentage_7d\",\"@{price_change_percentage_7d}\"],[\"predicted_cluster\",\"@{predicted_cluster}\"]]},\"id\":\"1484\",\"type\":\"HoverTool\"},{\"attributes\":{\"axis\":{\"id\":\"1498\"},\"coordinates\":null,\"dimension\":1,\"grid_line_color\":null,\"group\":null,\"ticker\":null},\"id\":\"1501\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1529\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"1546\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1526\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1499\",\"type\":\"BasicTicker\"},{\"attributes\":{\"end\":2.997678656273595,\"reset_end\":2.997678656273595,\"reset_start\":-2.107454305728652,\"start\":-2.107454305728652,\"tags\":[[[\"price_change_percentage_7d\",\"price_change_percentage_7d\",null]]]},\"id\":\"1483\",\"type\":\"Range1d\"},{\"attributes\":{},\"id\":\"1503\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"1495\",\"type\":\"BasicTicker\"},{\"attributes\":{\"axis\":{\"id\":\"1494\"},\"coordinates\":null,\"grid_line_color\":null,\"group\":null,\"ticker\":null},\"id\":\"1497\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1530\",\"type\":\"AllLabels\"},{\"attributes\":{\"active_drag\":{\"id\":\"1503\"},\"active_scroll\":{\"id\":\"1504\"},\"tools\":[{\"id\":\"1484\"},{\"id\":\"1502\"},{\"id\":\"1503\"},{\"id\":\"1504\"},{\"id\":\"1505\"},{\"id\":\"1506\"}]},\"id\":\"1508\",\"type\":\"Toolbar\"},{\"attributes\":{\"overlay\":{\"id\":\"1507\"}},\"id\":\"1505\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"1506\",\"type\":\"ResetTool\"},{\"attributes\":{\"fill_color\":{\"field\":\"color\",\"transform\":{\"id\":\"1515\"}},\"hatch_color\":{\"field\":\"color\",\"transform\":{\"id\":\"1515\"}},\"line_color\":{\"field\":\"color\",\"transform\":{\"id\":\"1515\"}},\"size\":{\"value\":5.477225575051661},\"x\":{\"field\":\"price_change_percentage_24h\"},\"y\":{\"field\":\"price_change_percentage_7d\"}},\"id\":\"1521\",\"type\":\"Scatter\"},{\"attributes\":{\"data\":{\"color\":{\"__ndarray__\":\"AwAAAAMAAAAAAAAAAAAAAAMAAAADAAAAAwAAAAMAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAABAAAAAwAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAA=\",\"dtype\":\"int32\",\"order\":\"little\",\"shape\":[41]},\"predicted_cluster\":{\"__ndarray__\":\"AwAAAAMAAAAAAAAAAAAAAAMAAAADAAAAAwAAAAMAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAABAAAAAwAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAA=\",\"dtype\":\"int32\",\"order\":\"little\",\"shape\":[41]},\"price_change_percentage_24h\":{\"__ndarray__\":\"DdlqYN9F4D86azDosLzHP5giRdTpS5Y/5iURtxHfpL8wCyMArRbzP/cOjHA0iuw/1QxzqW9Xhz8zBL2hZD+6P0nbN/ba1rM/WpkZGJ+73D/+slcesDPVP/IxOp6elqE/H2STd0ruwz9Epj8/c9DQPxk0XoR2pcA/jEB40RVnw790fnl54Irtv9XPDahDw9G/qq8st/Fh0L/5U5ZBISbHP6Slu6TDVtI/BVlpN5h+4D+njODODoCqPwXDDo/fo6q/woaukuXmy79od0yHwmevP8HhEPEMldA/ypmU5gu54j+sKNPN2lDAv1YH9WGFy/m/N7JuVBEB07/EU4GAhEGyv91nhz6W7BPA/ACFOIMFwL/DnH9IcNv2v5azwSWNt/4/VLqXBn668D/IKcQzxy3av5WrmDyeito/Bf22eE/6sz9Y362Ir3rzPw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[41]},\"price_change_percentage_7d\":{\"__ndarray__\":\"U1k8q3mQ3z9yoPpI+ebtP22UiL5Pmua/Ubo8ah/z6b8wAdnT9gEAQIJpDjGZPPU/BTbpSPiTBEAmUWkixiD4P/OMI2gdZdU/DZTtp1doyL936vtUZtb5v0QZLH/ydOe/it8GjguF7b8rMp3jf678PwRAcFxBAKW/ZWZRGoqp5j8Udj8VbP/2vySelkVDp9i/XK6ZksNx/T/tJm9WzI7mvy674lUf4tS/Q3zKstaO3T84jfoETLXtv6NqpXs9Q92/wrTyyiEu678mI2rMB53mv1Euo6Hk788/3UZrgr7Q778kzwwdV7vtP/9TV66U6fq/ZWX+mWVCuD8GJ0pHuV/Nv3SFotqbIae/srW7TleV4j/JyBNmVh+av008Y/5ntdc/Nv03JFjJ47+Htdvf1gXtv2Avihmzf9o/e31xtwIC5r/STlu6Y3Ljvw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[41]}},\"selected\":{\"id\":\"1517\"},\"selection_policy\":{\"id\":\"1546\"}},\"id\":\"1516\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1492\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"1532\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"field\":\"color\",\"transform\":{\"id\":\"1515\"}},\"hatch_alpha\":{\"value\":0.1},\"hatch_color\":{\"field\":\"color\",\"transform\":{\"id\":\"1515\"}},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"field\":\"color\",\"transform\":{\"id\":\"1515\"}},\"size\":{\"value\":5.477225575051661},\"x\":{\"field\":\"price_change_percentage_24h\"},\"y\":{\"field\":\"price_change_percentage_7d\"}},\"id\":\"1520\",\"type\":\"Scatter\"},{\"attributes\":{\"high\":3,\"low\":0,\"palette\":[\"#440154\",\"#440255\",\"#440357\",\"#450558\",\"#45065a\",\"#45085b\",\"#46095c\",\"#460b5e\",\"#460c5f\",\"#460e61\",\"#470f62\",\"#471163\",\"#471265\",\"#471466\",\"#471567\",\"#471669\",\"#47186a\",\"#48196b\",\"#481a6c\",\"#481c6e\",\"#481d6f\",\"#481e70\",\"#482071\",\"#482172\",\"#482273\",\"#482374\",\"#472575\",\"#472676\",\"#472777\",\"#472878\",\"#472a79\",\"#472b7a\",\"#472c7b\",\"#462d7c\",\"#462f7c\",\"#46307d\",\"#46317e\",\"#45327f\",\"#45347f\",\"#453580\",\"#453681\",\"#443781\",\"#443982\",\"#433a83\",\"#433b83\",\"#433c84\",\"#423d84\",\"#423e85\",\"#424085\",\"#414186\",\"#414286\",\"#404387\",\"#404487\",\"#3f4587\",\"#3f4788\",\"#3e4888\",\"#3e4989\",\"#3d4a89\",\"#3d4b89\",\"#3d4c89\",\"#3c4d8a\",\"#3c4e8a\",\"#3b508a\",\"#3b518a\",\"#3a528b\",\"#3a538b\",\"#39548b\",\"#39558b\",\"#38568b\",\"#38578c\",\"#37588c\",\"#37598c\",\"#365a8c\",\"#365b8c\",\"#355c8c\",\"#355d8c\",\"#345e8d\",\"#345f8d\",\"#33608d\",\"#33618d\",\"#32628d\",\"#32638d\",\"#31648d\",\"#31658d\",\"#31668d\",\"#30678d\",\"#30688d\",\"#2f698d\",\"#2f6a8d\",\"#2e6b8e\",\"#2e6c8e\",\"#2e6d8e\",\"#2d6e8e\",\"#2d6f8e\",\"#2c708e\",\"#2c718e\",\"#2c728e\",\"#2b738e\",\"#2b748e\",\"#2a758e\",\"#2a768e\",\"#2a778e\",\"#29788e\",\"#29798e\",\"#287a8e\",\"#287a8e\",\"#287b8e\",\"#277c8e\",\"#277d8e\",\"#277e8e\",\"#267f8e\",\"#26808e\",\"#26818e\",\"#25828e\",\"#25838d\",\"#24848d\",\"#24858d\",\"#24868d\",\"#23878d\",\"#23888d\",\"#23898d\",\"#22898d\",\"#228a8d\",\"#228b8d\",\"#218c8d\",\"#218d8c\",\"#218e8c\",\"#208f8c\",\"#20908c\",\"#20918c\",\"#1f928c\",\"#1f938b\",\"#1f948b\",\"#1f958b\",\"#1f968b\",\"#1e978a\",\"#1e988a\",\"#1e998a\",\"#1e998a\",\"#1e9a89\",\"#1e9b89\",\"#1e9c89\",\"#1e9d88\",\"#1e9e88\",\"#1e9f88\",\"#1ea087\",\"#1fa187\",\"#1fa286\",\"#1fa386\",\"#20a485\",\"#20a585\",\"#21a685\",\"#21a784\",\"#22a784\",\"#23a883\",\"#23a982\",\"#24aa82\",\"#25ab81\",\"#26ac81\",\"#27ad80\",\"#28ae7f\",\"#29af7f\",\"#2ab07e\",\"#2bb17d\",\"#2cb17d\",\"#2eb27c\",\"#2fb37b\",\"#30b47a\",\"#32b57a\",\"#33b679\",\"#35b778\",\"#36b877\",\"#38b976\",\"#39b976\",\"#3bba75\",\"#3dbb74\",\"#3ebc73\",\"#40bd72\",\"#42be71\",\"#44be70\",\"#45bf6f\",\"#47c06e\",\"#49c16d\",\"#4bc26c\",\"#4dc26b\",\"#4fc369\",\"#51c468\",\"#53c567\",\"#55c666\",\"#57c665\",\"#59c764\",\"#5bc862\",\"#5ec961\",\"#60c960\",\"#62ca5f\",\"#64cb5d\",\"#67cc5c\",\"#69cc5b\",\"#6bcd59\",\"#6dce58\",\"#70ce56\",\"#72cf55\",\"#74d054\",\"#77d052\",\"#79d151\",\"#7cd24f\",\"#7ed24e\",\"#81d34c\",\"#83d34b\",\"#86d449\",\"#88d547\",\"#8bd546\",\"#8dd644\",\"#90d643\",\"#92d741\",\"#95d73f\",\"#97d83e\",\"#9ad83c\",\"#9dd93a\",\"#9fd938\",\"#a2da37\",\"#a5da35\",\"#a7db33\",\"#aadb32\",\"#addc30\",\"#afdc2e\",\"#b2dd2c\",\"#b5dd2b\",\"#b7dd29\",\"#bade27\",\"#bdde26\",\"#bfdf24\",\"#c2df22\",\"#c5df21\",\"#c7e01f\",\"#cae01e\",\"#cde01d\",\"#cfe11c\",\"#d2e11b\",\"#d4e11a\",\"#d7e219\",\"#dae218\",\"#dce218\",\"#dfe318\",\"#e1e318\",\"#e4e318\",\"#e7e419\",\"#e9e419\",\"#ece41a\",\"#eee51b\",\"#f1e51c\",\"#f3e51e\",\"#f6e61f\",\"#f8e621\",\"#fae622\",\"#fde724\"]},\"id\":\"1515\",\"type\":\"LinearColorMapper\"},{\"attributes\":{\"coordinates\":null,\"group\":null,\"text_color\":\"black\",\"text_font_size\":\"12pt\"},\"id\":\"1486\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"1533\",\"type\":\"AllLabels\"},{\"attributes\":{\"fill_color\":{\"field\":\"color\",\"transform\":{\"id\":\"1515\"}},\"hatch_color\":{\"field\":\"color\",\"transform\":{\"id\":\"1515\"}},\"line_color\":{\"field\":\"color\",\"transform\":{\"id\":\"1515\"}},\"size\":{\"value\":5.477225575051661},\"x\":{\"field\":\"price_change_percentage_24h\"},\"y\":{\"field\":\"price_change_percentage_7d\"}},\"id\":\"1519\",\"type\":\"Scatter\"}],\"root_ids\":[\"1481\"]},\"title\":\"Bokeh Application\",\"version\":\"2.4.3\"}};\n",
       "    var render_items = [{\"docid\":\"ed67bc9f-da79-4cbc-a2b6-1d797c028b90\",\"root_ids\":[\"1481\"],\"roots\":{\"1481\":\"5d5859f4-5651-42f7-898b-0ab6de514b3e\"}}];\n",
       "    root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "    for (const render_item of render_items) {\n",
       "      for (const root_id of render_item.root_ids) {\n",
       "\tconst id_el = document.getElementById(root_id)\n",
       "\tif (id_el.children.length && (id_el.children[0].className === 'bk-root')) {\n",
       "\t  const root_el = id_el.children[0]\n",
       "\t  root_el.id = root_el.id + '-rendered'\n",
       "\t}\n",
       "      }\n",
       "    }\n",
       "  }\n",
       "  if (root.Bokeh !== undefined && root.Bokeh.Panel !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined && root.Bokeh.Panel !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else if (document.readyState == \"complete\") {\n",
       "        attempts++;\n",
       "        if (attempts > 200) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 25, root)\n",
       "  }\n",
       "})(window);</script>"
      ],
      "text/plain": [
       ":Scatter   [price_change_percentage_24h]   (price_change_percentage_7d,predicted_cluster)"
      ]
     },
     "execution_count": 44,
     "metadata": {
      "application/vnd.holoviews_exec.v0+json": {
       "id": "1481"
      }
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create a scatter plot using hvPlot by setting \n",
    "# `x=\"price_change_percentage_24h\"` and `y=\"price_change_percentage_7d\"`. \n",
    "# Color the graph points with the labels found using K-Means and \n",
    "# add the crypto name in the `hover_cols` parameter to identify \n",
    "# the cryptocurrency represented by each data point.\n",
    "scatter_plot = scaled_df_copy.hvplot.scatter(\n",
    "    x=\"price_change_percentage_24h\",\n",
    "    y=\"price_change_percentage_7d\",\n",
    "    c=\"predicted_cluster\",\n",
    "    cmap=\"viridis\",\n",
    "    hover_cols=[\"crypto_name\"]\n",
    ")\n",
    "\n",
    "scatter_plot"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Optimize Clusters with Principal Component Analysis."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>PCA(n_components=3)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">PCA</label><div class=\"sk-toggleable__content\"><pre>PCA(n_components=3)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "PCA(n_components=3)"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create a PCA model instance and set `n_components=3`.\n",
    "pca = PCA(n_components=3)\n",
    "pca"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PC1</th>\n",
       "      <th>PC2</th>\n",
       "      <th>PC3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.059139</td>\n",
       "      <td>-0.536684</td>\n",
       "      <td>-0.438238</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.956401</td>\n",
       "      <td>-0.410821</td>\n",
       "      <td>-1.016966</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-0.990142</td>\n",
       "      <td>-0.454228</td>\n",
       "      <td>0.690021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-0.973189</td>\n",
       "      <td>-0.494650</td>\n",
       "      <td>0.551234</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3.330367</td>\n",
       "      <td>-1.022311</td>\n",
       "      <td>-0.501341</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        PC1       PC2       PC3\n",
       "0  2.059139 -0.536684 -0.438238\n",
       "1  1.956401 -0.410821 -1.016966\n",
       "2 -0.990142 -0.454228  0.690021\n",
       "3 -0.973189 -0.494650  0.551234\n",
       "4  3.330367 -1.022311 -0.501341"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Use the PCA model with `fit_transform` to reduce to \n",
    "# three principal components.\n",
    "scaled_df_copy_pca = pca.fit_transform(scaled_df_copy)\n",
    "scaled_df_copy_pca_df = pd.DataFrame(scaled_df_copy_pca, columns=['PC1', 'PC2', 'PC3'])\n",
    "\n",
    "# View the first five rows of the DataFrame. \n",
    "scaled_df_copy_pca_df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Explained Variance</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.389392</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.291660</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.208101</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Explained Variance\n",
       "0            0.389392\n",
       "1            0.291660\n",
       "2            0.208101"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Retrieve the explained variance to determine how much information \n",
    "# can be attributed to each principal component.\n",
    "explained_variance = pca.explained_variance_ratio_\n",
    "explained_variance_df = pd.DataFrame(explained_variance, columns=['Explained Variance'])\n",
    "explained_variance_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total Explained Variance: 0.889153\n"
     ]
    }
   ],
   "source": [
    "total_explained_variance = sum(explained_variance)\n",
    "print(\"Total Explained Variance: %.6f\" % (total_explained_variance))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Answer the following question: \n",
    "\n",
    "**Question:** What is the total explained variance of the three principal components?\n",
    "\n",
    "**Answer:** The total explained variance of 3 principal components is 0.889153"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PC1</th>\n",
       "      <th>PC2</th>\n",
       "      <th>PC3</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>coin_id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>bitcoin</th>\n",
       "      <td>2.059139</td>\n",
       "      <td>-0.536684</td>\n",
       "      <td>-0.438238</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ethereum</th>\n",
       "      <td>1.956401</td>\n",
       "      <td>-0.410821</td>\n",
       "      <td>-1.016966</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tether</th>\n",
       "      <td>-0.990142</td>\n",
       "      <td>-0.454228</td>\n",
       "      <td>0.690021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ripple</th>\n",
       "      <td>-0.973189</td>\n",
       "      <td>-0.494650</td>\n",
       "      <td>0.551234</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bitcoin-cash</th>\n",
       "      <td>3.330367</td>\n",
       "      <td>-1.022311</td>\n",
       "      <td>-0.501341</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   PC1       PC2       PC3\n",
       "coin_id                                   \n",
       "bitcoin       2.059139 -0.536684 -0.438238\n",
       "ethereum      1.956401 -0.410821 -1.016966\n",
       "tether       -0.990142 -0.454228  0.690021\n",
       "ripple       -0.973189 -0.494650  0.551234\n",
       "bitcoin-cash  3.330367 -1.022311 -0.501341"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create a new DataFrame with the PCA data.\n",
    "\n",
    "# Creating a DataFrame with the PCA data\n",
    "df_market_data_pca = scaled_df_copy_pca_df\n",
    "\n",
    "# Copy the crypto names from the original data\n",
    "crypto_names = scaled_df_copy.index\n",
    "\n",
    "# Set the coinid column as index\n",
    "df_market_data_pca.set_index(crypto_names, inplace=True)\n",
    "\n",
    "# Display sample data\n",
    "df_market_data_pca.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Find the Best Value for k Using the PCA Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create a list with the number of k-values from 1 to 11\n",
    "k_values = list(range(1, 12))\n",
    "k_values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create an empty list to store the inertia values\n",
    "inertia_values = list()\n",
    "\n",
    "# Create a for loop to compute the inertia with each possible value of k\n",
    "# Inside the loop:\n",
    "# 1. Create a KMeans model using the loop counter for the n_clusters\n",
    "# 2. Fit the model to the data using `df_market_data_pca`\n",
    "# 3. Append the model.inertia_ to the inertia list\n",
    "for k in range(1, 12):\n",
    "    kmeans_model = KMeans(n_clusters=k)\n",
    "    kmeans_model.fit(df_market_data_pca)\n",
    "    inertia_values.append(kmeans_model.inertia_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create a dictionary with the data to plot the Elbow curve\n",
    "elbow_data_pca = {\n",
    "    'k': k_values,\n",
    "    'inertia': inertia_values\n",
    "}\n",
    "\n",
    "# Create a DataFrame with the data to plot the Elbow curve\n",
    "elbow_df_pca = pd.DataFrame(elbow_data_pca)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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8IWrBqcRERERsS0qtXZiRJv6ODmYAPhMs7UiIiIieajU2okALzf6NasF5JRas9licCIRERER26FSa0dGtWsIwNn4FLacumxwGhERERHboVJrRwa1rIO3qzMAn4WfNDiNiIiIiO1QqbUjHi5ODG1dD4AV+0+TlpltcCIRERER26BSa2cevn7b3IS0TNYdO29wGhERERHboFJrZ3oGV6emjzsAy7QEQURERARQqbU7jg4O1juMrTt6nqsp6QYnEhERETGeSq0dyr0RQ0a2mZUHzxicRkRERMR4KrV2qE0tP1rWqALAZ3u1BEFEREREpdYOmUwm6wfGfj55mdNXkgxOJCIiImIslVo7lbuuFuDzfbptroiIiFRuKrV2qr6/F90bVgNg2d5TWCy6ba6IiIhUXiq1duzh9jm3zT16KYED0VcNTiMiIiJiHJVaOza8dT1cHHOGcNleLUEQERGRykul1o75ebhyb4vaQM662myz2eBEIiIiIsZQqbVzo9rlLEG4cC2VHyMvGZxGRERExBgqtXbu3ua18XV3AWBZuJYgiIiISOWkUmvn3JwdGda6HgBfHTxDSkaWwYlEREREyp9KbQUw6vouCInpmaw+cs7gNCIiIiLlT6W2AujWoBp1fT0A+ExLEERERKQSUqmtABwcfr9t7vqI88QmpRmcSERERKR8qdRWELmlNstsYcWB0wanERERESlfKrUVRKuafrSp5QfoRgwiIiJS+ajUViCjrs/W7jgdw8m4RIPTiIiIiJQfldoK5MF2DTCZcr7XB8ZERESkMlGprUBqV/GgV3ANIGcJgsViMTiRiIiISPlQqa1gHrq+BOG3mGvsORtncBoRERGR8qFSW8EMDamHm5MjoNvmioiISOWhUlvBVHF3YVDLOgB8sS+KrGyzwYlEREREyp5KbQU0qn3OEoTLSWlsOn7B4DQiIiIiZU+ltgLq17QW/h4ugPasFRERkcpBpbYCcnFy5IG2QQD87/AZktIzjQ0kIiIiUsZUaiuo3BsxpGRk8/XhswanERERESlbKrUVVJegQBr4ewHaBUFEREQqPpXaCspkMvHw9dna7369wKXEVIMTiYiIiJQdldoKLLfUmi0WvtgXZWwYERERkTKkUluBNatehQ51qwLwmZYgiIiISAWmUlvB5X5gbPfZOH69nGBwGhEREZGyoVJbwT3QNggHkwnQbK2IiIhUXCq1FVwNH3fublITyCm1FovF4EQiIiIipc/wUhsREcG4cePo2LEjXbt25dlnn+XKlSsAzJo1i1atWhEaGmr988UXX1ivXbVqFX369KFt27YMHTqUffv2GfU2bFrubXNPxiWx83SswWlERERESp+hpTYtLY3x48cTGhrK1q1bWbNmDfHx8cyYMQOAQ4cOMXv2bPbt22f9M3LkSAB27drF7NmzmTdvHrt37+a+++5j4sSJpKZq66obDWlVFw8XRwCW7T1pcBoRERGR0mdoqY2OjqZZs2ZMnjwZFxcX/Pz8GDlyJLt37yYjI4PffvuNVq1a5XvtihUrGDBgAO3bt8fZ2ZmxY8fi5+fHunXryvld2D4vV2eGtKoHwJf7T5ORlW1wIhEREZHSZWipbdiwIYsXL8bR0dH62IYNG2jZsiURERFkZWUxf/587rzzTvr168cHH3yA2WwGIDIykiZNmuR5vuDgYCIiIsr1PdiL3D1r41LS2fBrtMFpREREREqXk9EBclksFt566y02b97M0qVLiY2NpWPHjowePZp//etfHDt2jMmTJ+Pg4MD48eNJTk7G3d09z3O4ubmRkpJS5Nct6jX2qGudKgR4uhKbnM6nv0TSu0HVUn+N3KUfWgJivzSG9k9jaN80fvZPY1j6LBYLpus7Od2KTZTapKQkpk+fzpEjR1i6dClNmzaladOmdO3a1XpO69atGTNmDOvWrWP8+PG4u7uTlpaW53nS0tLw8/Mr0mtnZmZy7NixUnkftq53bU+++C2dNcfOs/vgYbycHW9/UTFERUWVyfNK+dEY2j+NoX3T+Nk/jWHpcnFxue05hpfaM2fO8Ne//pVatWqxcuVK/P39Adi0aROxsbE8+OCD1nMzMjJwc3MDoHHjxhw/fjzPc0VGRtK9e/civb6zszPBwcElfBf2YaJ3db74bTPp2RZ+zfLiT62DSvX5U1NTiYqKIigo6KZZdLEPGkP7pzG0bxo/+6cxLH2RkZGFOs/QUpuQkMCYMWPo3Lkzc+bMwcHh9yW+FouFuXPnUr9+fTp37sz+/fv55JNPmD59OgDDhw9n8uTJ3HPPPbRv355ly5YRFxdHnz59ipTBZDLh4eFRqu/LVoU1dqdxgDfHYxNZefg8E8JalMnruLu7V5rfaUWlMbR/GkP7pvGzfxrD0lOYpQdgcKn96quviI6O5ttvv2X9+vV5ju3bt4/p06fz0ksvcenSJQICApgyZQqDBw8GoEuXLsyaNct6PDg4mEWLFuHr62vAO7EPJpOJUe0b8tKGA/wQeZHzCSnUrqL/womIiIj9M7TUjhs3jnHjxhV4/MEHH8yz/OBGgwcPtpZcKZyH2zXgpQ0HsFjgi31RPHVX2czWioiIiJQnw+8oJuWrUYA3XeoHAroRg4iIiFQcKrWVUO6etfujr3L4wlWD04iIiIiUnEptJTSibX2cHHIWXX8WfsrgNCIiIiIlp1JbCQV6udGvWS0APt8XhdlsMTiRiIiISMmo1FZSo9o1BODM1WS2nrpscBoRERGRklGpraQGtayDl2vO5hfLwvWBMREREbFvKrWVlIeLE0ND6gGw8sAZ0rOyDU4kIiIiUnwqtZXYqPY5SxDiUzNYd+y8wWlEREREik+lthLrGVydmj4596Vetle7IIiIiIj9UqmtxBwdHHgoNGfP2rVHz3E1Jd3gRCIiIiLFo1JbyeXeiCEj28zKg2cMTiMiIiJSPCq1lVzb2n60qF4FgM91IwYRERGxUyq1lZzJZGJU+5zZ2p9OXOLM1WSDE4mIiIgUnUqtWNfVgmZrRURExD6p1Ar1/b3o1rAaAEv3nsRi0W1zRURExL6o1Arw+wfGjl5K4ED0VYPTiIiIiBSNSq0AMKJNfVwcc/7j8JmWIIiIiIidUakVAPw8XLm3RW0gZ11tttlscCIRERGRwlOpFavcJQjR11L5MfKSwWlERERECk+lVqwGNK9DFTdnAJZpCYKIiIjYEZVasXJzdmR4m/oAfHXwDKmZWQYnEhERESkclVrJY1T7hgAkpmey+sg5g9OIiIiIFI5KreTRrUE16vp6ALBsr5YgiIiIiH1QqZU8HBxM1juMrY84T2xSmsGJRERERG5PpVZuMqp9TqnNMltYcfC0wWlEREREbk+lVm7SqqYfbWr5AfCZliCIiIiIHVCplXyNur5n7faoGE7GJRqcRkREROTWVGolXw+2a4DJlPO9bpsrIiIitk6lVvJVu4oHPRvVAHKWIFgsFoMTiYiIiBRMpVYK9PD1D4z9GnONveeuGJxGREREpGAqtVKgoSH1cHNyBGDZ3pMGpxEREREpmEqtFKiKuwsDW9YBYPm+KLKyzQYnEhEREcmfSq3cUu4uCJeT0th0/ILBaURERETyp1Irt9S/WS38PVwA7YIgIiIitkulVm7JxcmRB9oGAbDq0BmS0jONDSQiIiKSD5Vaua2Hry9BSMnI5uvDZw1OIyIiInIzlVq5rTuDAgny9wRgmZYgiIiIiA1SqZXbMplMjGrXEIBNv13gUmKqwYlERERE8lKplULJXYKQbbbw5f4oY8OIiIiI3EClVgqlWfUqtK/jD8CyvVqCICIiIrZFpVYKbVT7nCUIu8/G8VvMNYPTiIiIiPxOpVYKbWTbIBxMJgA+02ytiIiI2BCVWim0Gj7u3N2kJgDLwk9isVgMTiQiIiKSQ6VWimRU+5wPjJ2MS2Ln6ViD04iIiIjkUKmVIhnSqi4eLo4ALNt70uA0IiIiIjlUaqVIvFydGdyyLgBf7j9NZrbZ4EQiIiIiKrVSDLm7IMSlpLPh12iD04iIiIio1Eox9GlSk0AvV0BLEERERMQ2qNRKkTk5OjCybRAA3xw+x7W0DGMDiYiISKWnUivFkrsEIS0rm68OnjU4jYiIiFR2KrVSLHfUrUrjAG8APgvXEgQRERExluGlNiIignHjxtGxY0e6du3Ks88+y5UrVwA4cOAAI0aMIDQ0lF69erFixYo8165atYo+ffrQtm1bhg4dyr59+4x4C5WSyWSyztb+EHmR6IQUgxOJiIhIZWZoqU1LS2P8+PGEhoaydetW1qxZQ3x8PDNmzCAhIYEJEyYwZMgQdu/ezZw5c5g7dy4HDx4EYNeuXcyePZt58+axe/du7rvvPiZOnEhqaqqRb6lSeahdEAAWCyzfF2VoFhEREancDC210dHRNGvWjMmTJ+Pi4oKfnx8jR45k9+7dbNy4EV9fX0aNGoWTkxNdunRh0KBBLFu2DIAVK1YwYMAA2rdvj7OzM2PHjsXPz49169YZ+ZYqleAAHzrXDwC0C4KIiIgYy8nIF2/YsCGLFy/O89iGDRto2bIlx48fp0mTJnmOBQcHs3LlSgAiIyMZNmzYTccjIiKKlMFisZCSon86L64RIXXYeTqW/dFX2XfmMm6g2XI7ljt2GkP7pTG0bxo/+6cxLH0WiwWTyXTb8wwttX9ksVh466232Lx5M0uXLuWTTz7B3d09zzlubm7WApqcnHzL44WVmZnJsWPHSha+EmvlkoWjCbIt8NG2o0xqW52oqCijY0kJaQztn8bQvmn87J/GsHS5uLjc9hybKLVJSUlMnz6dI0eOsHTpUpo2bYq7uzuJiYl5zktLS8PT0xMAd3d30tLSbjru5+dXpNd2dnYmODi4ZG+gkrv78DU2/HaRtVGJNPJ1pXXDevRsUqtQf6sS25KamkpUVBRBQUE3/aVR7IPG0L5p/OyfxrD0RUZGFuo8w0vtmTNn+Otf/0qtWrVYuXIl/v7+ADRp0oRt27blOTcyMpLGjRsD0LhxY44fP37T8e7duxfp9U0mEx4eHiV4B9K8hi8bfrtITEoGL2yPhu3RNKrqzauD2nF/SD2j40kxuLu7678Xdk5jaN80fvZPY1h6CjtJZugHxRISEhgzZgzt2rXjww8/tBZagD59+hAbG8uSJUvIzMxk586drF692rqOdvjw4axevZqdO3eSmZnJkiVLiIuLo0+fPka9nUpp1aEzzN/y602Pn4hL5IGPf2bVoTMGpBIREZHKxtCZ2q+++oro6Gi+/fZb1q9fn+fYvn37+Oijj5gzZw7z58/H39+fmTNn0rlzZwC6dOnCrFmzeOmll7h06RLBwcEsWrQIX19fA95J5WSxWHhudThmiyXf42aLhWlrwhnSqq6WIoiIiEiZMrTUjhs3jnHjxhV4PCQkhOXLlxd4fPDgwQwePLgsokkhbDl5mRNxibc8JzI2ka2nLtOtYfVySiUiIiKVkeF3FBP7FX2tcDtNRCdoWxMREREpWyq1Umy1fAq3AL5WFX36U0RERMqWSq0UW7eG1WhU1fuW5wQHeBPWoFo5JRIREZHKSqVWis1kMvHqoHY4FPAhMBMwb2A7fUhMREREypxKrZTI/SH1+HJMd4IDbp6xdXJw4I66VQ1IJSIiIpWNSq2U2P0h9YiYNphv/687c7rW5oOhHTABmWYzf99w0Oh4IiIiUgmo1EqpMJlMhAUF0qd+FR4Krc/Yjo0AWLL7BEcvxhsbTkRERCo8lVopE7P6tsHNyRGzxcLz6/YZHUdEREQqOJVaKRN1/TyZ0q0ZAN8cOce2U5cNTiQiIiIVmUqtlJnnerXE190FgBlr92Ep4Ha6IiIiIiWlUitlxs/Dlem9WwGw9dRl1hw9Z3AiERERqahUaqVMTQ5rSp0qOXcem7F2H9lms8GJREREpCJSqZUy5e7sxKx+bQA4eimBT/acNDiRiIiIVEQqtVLm/tyhIS2qVwHgpfUHSM3MMjiRiIiIVDQqtVLmnBwdmHNvKADnElJ4d+uvBicSERGRiqbEpTY2NpYLFy4QHR1NdHQ0586d4/jx43z++eelkU8qiEEt69A1KBCAud8f5mpKusGJREREpCJxKu6FERERPPXUU5w6dSrf4yaTiYceeqjYwaRiMZlMzB3Yju4LNnA1NYPXfjjC3IHtjI4lIiIiFUSxZ2pfe+01rl27xnPPPUfHjh0JCwvjhRdeoEePHphMJj755JPSzCkVQNcG1RjUsg4A87dEcC4+2eBEIiIiUlEUu9QeOHCAJ554grFjxzJgwABSUlJ4+OGHWbhwIXfffTeffvppaeaUCmLOvaE4mEykZWXz9w0HjY4jIiIiFUSxS21GRgYNGjQAoGHDhvz66+8f/hk6dCj79+8vcTipeFrW8GXMHQ0BWLL7BMcuJRicSERERCqCYpfaWrVqcfbsWQDq169PUlIS587l3DHKxcWFhASVFcnfrL5tcHNyxGyx8Py6fUbHERERkQqg2KW2b9++vP7666xfv57AwEAaNmzIm2++ya+//spHH31E3bp1SzOnVCB1/Tx5LKwpAF8fPsv2U5cNTiQiIiL2rtil9rHHHqN9+/b897//BWD69Ols2rSJIUOGsHPnTqZMmVJqIaXiea53K3zdXQCYvnYfFovF4EQiIiJiz4q9pZerqyvz588nMzMTgG7durF69WqOHDlCy5YtqVevXqmFlIrH38OVab1aMW1tOFtPXWbtsfMMbFHH6FgiIiJip0p88wVnZ2fr9/Xq1eOee+5RoZVCeaxbU2pX8QBgxtpwss1mgxOJiIiIvSrSTG3v3r3597//TbNmzejVqxcmk6nAc00mE5s2bSpxQKm43J2dmNWvNRO+3MmRiwl8uucUYzs2MjqWiIiI2KEildqOHTvi6elp/f5WpVakMMZ0aMSbPx3j2KUEZq3fz8jQ+rg7F3tVjIiIiFRSRWoPc+fOtX4/b968W56blZVVvERSqTg5OjDn3lCG/udHziWk8O7WX/lbz5ZGxxIRERE7U+w1tb179yYiIiLfYwcPHqRr167FDiWVy30t63BnUCAAc78/THxqhsGJRERExN4UaaZ2zZo11hnY8+fPs3HjxnyL7Y4dO6y7IojcjslkYu6AdvT49waupmbw2g+HeWVAO6NjiYiIiB0pUqk9fPgwS5YsAXKKyLvvvlvguePGjStRMKlcwhpWY2CLOqw5eo63f45gclgz684IIiIiIrdTpFL71FNPMXr0aCwWC3fffTcLFiygefPmec5xdHTEy8sLLy+vUg0qFd+ce9uy7th50rKy+fuGA3zwQBejI4mIiIidKFKpdXFxoXbt2gCEhYXh6+tr/VmkpFrV9OPPHRqyZPcJ/vPLCZ7q0YJm1asYHUtERETsQLE/KLZv3z6tm5VS91K/Nrg6OWC2WHj+231GxxERERE7UexSGxISws8//1yaWUSo6+fJlLBmAPzv0Fl2RMUYnEhERETsQbF3uW/atCmffvopGzZsIDg4mKpVq+Y5bjKZeOWVV0ocUCqf53q3YvGuSOJTM5i+NpzNk/rqRh8iIiJyS8Uutd999x3VqlUDIDIyksjIyDzHVUKkuPw9XHmuV0umr93HlpOXWXvsPANb1DE6loiIiNiwYpfaH374oTRziOQxpVszFmz9lfMJKTy/dh/3NKuFo0OxV8uIiIhIBVfilmA2m4mIiODnn38mKSmJ+Pj4UogllZ27sxOz+rUG4PDFeJbuPWVwIhEREbFlJSq1X3/9NXfddRdDhgzhkUce4fTp00ybNo0pU6aQkaFbnUrJjOnQiGbVfACYtX4/aZnZBicSERERW1XsUrtu3Tqee+45OnfuzJtvvonFYgGgb9++/Pzzz7e825hIYTg5OjDn3lAAzsan8O62Xw1OJCIiIraq2KV24cKFPPjgg7z22mv07dvX+vjQoUN57LHHWLt2bakElMptcKu6dKkfCMDc7w8Rn6p/ARAREZGbFbvUnjp1ij59+uR7rE2bNly6dKnYoURymUwm5g7Mma29kpLBPzcfMTiRiIiI2KJil9qqVaty4sSJfI+dOHHipn1rRYqrW8Pq1i293v75GOcTUgxOJCIiIram2KX23nvvZf78+axfv976oTCTycThw4d599136d+/f6mFFJlzb1tMJkjNzOYfGw8YHUdERERsTLFL7dSpU2nbti1Tp06lffv2AIwePZoRI0YQFBTEE088UWohRVrV9OPPHRoB8NGuE0RcSjA4kYiIiNiSYt98wcXFhcWLF7Nt2zZ27NhBQkIC3t7edOzYkR49euiOYlLqXurXhuX7TpGeZWbmt/tZObaH0ZFERETERhS71Obq2rUrXbt2LY0sIrdUz8+Tx8Ka8caPR1l16Aw7T8fQ+frOCCIiIlK5lajUbtu2jc2bN5OamorZbM5zzGQy8corr5QonMiNpvVuxeKdx0lIy2TamnA2T+qrfxUQERGR4pfaxYsX8/rrr+Pq6oq/v/9NxUJFQ8qCv4crz/VqxYx1+9hy8jLrjp1nwPWdEURERKTyKvYHxZYtW8agQYPYvXs3mzdv5ocffsjz5/vvvy/S8125coU+ffqwa9cu62OzZs2iVatWhIaGWv988cUX1uOrVq2iT58+tG3blqFDh7Jv377ivh2xI1O6NaOWjzsAM9buI/uGfyUQERGRyqfYpTYuLo7hw4fj4uJS4hB79+5l5MiRnDlzJs/jhw4dYvbs2ezbt8/6Z+TIkQDs2rWL2bNnM2/ePHbv3s19993HxIkTSU1NLXEesW0eLk7M6tcGgMMX41kWfsrgRCIiImK0YpfaFi1acPz48RIHWLVqFU8//TRPPvlknsczMjL47bffaNWqVb7XrVixggEDBtC+fXucnZ0ZO3Ysfn5+rFu3rsSZxPaNvaMRzar5ADBr/QHSMrMNTiQiIiJGKvaa2hkzZjB16lQ8PDxo06YN7u7uN51Tq1at2z5PWFgYgwYNwsnJKU+xjYiIICsri/nz57N37168vb0ZNmwY48ePx8HBgcjISIYNG5bnuYKDg4mIiCjS+7BYLKSk6A5VpSF3lry8Zstf7N2Chz/fyZmrybz94yGmdG1SLq9bkZX3GErp0xjaN42f/dMYlj6LxVKoz2oVu9Q+9NBDmM1mZsyYUeALHTt27LbPExiY/5ZMiYmJdOzYkdGjR/Ovf/2LY8eOMXnyZBwcHBg/fjzJyck3FWk3N7ciF9TMzMxC5ZTCi4qKKpfXaYSFkAB3DsWmMu+Ho3T2ysDLxbFcXruiK68xlLKjMbRvGj/7pzEsXYVZ7lrsUjt79uwy3eHgxv1vW7duzZgxY1i3bh3jx4/H3d2dtLS0PNekpaXh5+dXpNdxdnYmODi4VDJXdqmpqURFRREUFJTvzH1ZeM0jkHs+/JlrGdmsuwyz+jQvl9etqIwYQyldGkP7pvGzfxrD0hcZGVmo84pdaocOHVrcSwtl06ZNxMbG8uCDD1ofy8jIwM3NDYDGjRvftKY3MjKS7t27F+l1TCYTHh4eJQ8sVu7u7uX2O+3boj4DWtRm7dHz/HtHJE/c1YpaVTSeJVWeYyhlQ2No3zR+9k9jWHoKO4lapFLbrFmzQj+xyWTi6NGjRXn6PCwWC3PnzqV+/fp07tyZ/fv388knnzB9+nQAhg8fzuTJk7nnnnto3749y5YtIy4ujj59+hT7NcU+vXJvKOuOnSc1M5t/bDzIwhGdjY4kIiIi5axIpXby5MnldlOFPn36MH36dF566SUuXbpEQEAAU6ZMYfDgwQB06dKFWbNmWY8HBwezaNEifH19yyWf2I5WNf0Y3b4hn+w5yUe/RDK1e3OaVa9idCwREREpR0UqtVOmTCmrHAD8+uuveX5+8MEH8yw/uNHgwYOtJVcqt7/3b8sX+6NIzzIz89v9rBzbw+hIIiIiUo6KvU+tiC2p5+fJ5K7NAFh16Aw7T8cYnEhERETKk0qtVBjTereiipszANPXhGOxWAxOJCIiIuVFpVYqjKqerjzXK+cOdD+fvMy3EdEGJxIREZHyolIrFcqUbs2o5ZOzL+CMteFkm80GJxIREZHyoFIrFYqHixMv9msDwKEL8XwWHmVsIBERESkXKrVS4Yy7oxFNA30AeHH9ftIysw1OJCIiImVNpVYqHCdHB+YMCAXgzNVkFm7/9TZXiIiIiL1TqZUKaUirunSuHwDAnE2HSEjNMDiRiIiIlCWVWqmQTCYTcwe0A+BKSgb/3HzE4EQiIiJSllRqpcLq3qg69zavDcBbPx/jwrUUgxOJiIhIWVGplQrtlQGhmEyQmpnNPzYeNDqOiIiIlBGVWqnQQmr6Mbp9QwA+3BXJr5cTDE4kIiIiZUGlViq8v/dvi6uTA9lmCzO/3W90HBERESkDKrVS4dXz82RS16YAfHXwDLtOxxicSEREREqbSq1UCtN7h+Dj5pzz/dp9WCwWgxOJiIhIaVKplUqhqqcrz/VqCcBPJy6xPiLa4EQiIiJSmlRqpdJ4vFtzavq4AzB9bTjZZrPBiURERKS0qNRKpeHh4sSLfVsDcOhCPJ+FRxkbSEREREqNSq1UKn/pGEyTQB8AZq3fT3pWtsGJREREpDSo1Eql4uTowJx7QwE4fTWZhdt/MziRiIiIlAaVWql07g+pS6d6AQDM+e4QCakZBicSERGRklKplUrHZDIxd2A7AOJS0nn9xyMGJxIREZGSUqmVSqlHo+rc07w2AG/+dIwL11IMTiQiIiIloVIrldYr94ZiMkFqZjazNx4yOo6IiIiUgEqtVFqta/nxp/YNAVi86zi/xVwzOJGIiIgUl0qtVGp/79cGF0cHss0WZq7bZ3QcERERKSaVWqnU6vt7MTmsKQD/PXiGX87EGpxIREREikOlViq96b1D8HFzzvl+TTgWi8XgRCIiIlJUKrVS6VX1dOXZni0B+PHEJTb8Gm1wIhERESkqlVoR4PFuzajp4w7A9DX7MJs1WysiImJPVGpFAE9XZ17s2xqAgxeu8tm+UwYnEhERkaJQqRW57i8dg2kS6APAi9/uJz0r2+BEIiIiUlgqtSLXOTk68PK9bQE4fTWZ97f/ZmwgERERKTSVWpE/GBpSj471qgLw8neHSEjNMDiRiIiIFIZKrcgfmEwm5g1sD0BcSjpv/HjU4EQiIiJSGCq1Ijfo0ag69zSvDcCbPx/lwrUUgxOJiIjI7ajUiuTjlXtDMZkgJSObl787ZHQcERERuQ2VWpF8tK7lx6h2DQFYtPM4v8VcMziRiIiI3IpKrUgB/t6/DS6ODmSbLbzw7X6j44iIiMgtqNSKFCDI34tJXZsCsPLAad7f8RvL953i5xOXsFh0xzERERFb4mR0ABFbNr13K97f8RupmdlMWrnL+nijqt68Oqgd94fUMzCdiIiI5NJMrcgtbDl1mbTMm+8sdiIukQc+/plVh84YkEpERERupFIrUgCLxcJzq8MpaKGB2WJh2ppwLUUQERGxASq1IgXYcvIyJ+ISb3lOZGwiW09dLqdEIiIiUhCVWpECRBfypgvRCallnERERERuR6VWpAC1fDwKd14V9zJOIiIiIrejUitSgG4Nq9GoqvctzwkO8CasQbVySiQiIiIFUakVKYDJZOLVQe1wMJkKPOfZXi0x3eK4iIiIlA+VWpFbuD+kHl+O6U5wQP4ztv89eEa7H4iIiNgA3XxB5DbuD6nHkFZ12XLyMheupVKrijtfHzrLmz8fY0NENIt3RfLXzo2NjikiIlKpqdSKFILJZKJ7o+rWn++oG8D6X6M5dimBp7/ZQ58mNQny9zIwoYiISOVmM8sPrly5Qp8+fdi16/dbkR44cIARI0YQGhpKr169WLFiRZ5rVq1aRZ8+fWjbti1Dhw5l37595R1bKik3Z0f+8+CdODqYSErP4v+Wb8ds1jIEERERo9hEqd27dy8jR47kzJnfbzmakJDAhAkTGDJkCLt372bOnDnMnTuXgwcPArBr1y5mz57NvHnz2L17N/fddx8TJ04kNVV7hkr5uKNeANN6tQLgxxOXeHfbrwYnEhERqbwML7WrVq3i6aef5sknn8zz+MaNG/H19WXUqFE4OTnRpUsXBg0axLJlywBYsWIFAwYMoH379jg7OzN27Fj8/PxYt26dEW9DKqmZfUJoU8sPgGlrw/kt5prBiURERConw9fUhoWFMWjQIJycnPIU2+PHj9OkSZM85wYHB7Ny5UoAIiMjGTZs2E3HIyIiivT6FouFlJTC3TlKbi13lryyzZYvvL893Rd+T2pmNmOWbWHj+LtwdLDPbb4q6xhWJBpD+6bxs38aw9JnsVgKtX2m4aU2MDAw38eTk5Nxd897pyY3NzdrAb3d8cLKzMzk2LFjRbpGbi0qKsroCOXKERjfKoD3DsTwy9krzFy1lT+3CDA6VolUtjGsiDSG9k3jZ/80hqXLxcXltucYXmoL4u7uTmJiYp7H0tLS8PT0tB5PS0u76bifn1+RXsfZ2Zng4OCShRUg52+lUVFRBAUF3fQXjorulSZN2R33I3vOXeWDQ7GMDmtNi+pVjI5VZJV5DCsKjaF90/jZP41h6YuMjCzUeTZbaps0acK2bdvyPBYZGUnjxjn7gTZu3Jjjx4/fdLx79+5Feh2TyYSHh0fJwkoe7u7ulfJ3+vHD3Wj/r7WkZWUz8X/hbH/8HpwdDV+2XiyVdQwrEo2hfdP42T+NYekp7J07bfb/cfv06UNsbCxLliwhMzOTnTt3snr1aus62uHDh7N69Wp27txJZmYmS5YsIS4ujj59+hicXCqrZtWr8PK9bQEIP3eFuZsOGRtIRESkErHZUuvn58dHH33E+vXr6dSpEzNnzmTmzJl07twZgC5dujBr1ixeeuklOnbsyNq1a1m0aBG+vr7GBpdK7fFuzejWsBoAczYdIvxcnMGJREREKgebWn7w66959/kMCQlh+fLlBZ4/ePBgBg8eXNaxRArN0cGBD0feSegba0jOyGLs59vY/eQAXJ0cjY4mIiJSodnsTK2IvWoU4M2rg9oBcORiAn/fcMDgRCIiIhWfSq1IGXi0SxPublITgH9uPsqOqBiDE4mIiFRsKrUiZcBkMrH4gS74uDljtlgY9/k2UjKyjI4lIiJSYanUipSRun6evDn4DgCOxyby/Lp9BicSERGpuFRqRcrQmDsaMqBFbQDmb4ngx8iLBicSERGpmFRqRcqQyWTi/RGd8ffIub3f/32xncS0TINTiYiIVDwqtSJlrKaPBwuGdgIg6koyz6zea3AiERGRikelVqQcjAwNYnib+gAs2nmcDRHRBicSERGpWFRqRcrJv4d2pJqXGwB//XIHV1PSDU4kIiJScajUipSTAC83Fo7Iuc3z+YQUpv5vj8GJREREKg6VWpFyNLhVXUZ3aAjA0r0n+d+hMwYnEhERqRhUakXK2VtD7qB2FQ8AJq7cRWxSmsGJRERE7J9KrUg583V3YdEDXQC4nJTGpP/uwmKxGJxKRETEvqnUihigX7NaTOjSGID/HjzDF/ujjA0kIiJi51RqRQzy2sD2BPl7AvDYf3/hwrUUgxOJiIjYL5VaEYN4uznz0YNdAbiamsEjK3ZqGYKIiEgxqdSKGKhHo+o83q0ZAGuPnmfJ7hMGJxIREbFPKrUiBptzbyhNAn0AeOrrPZy5mmxwIhEREfujUitiMA8XJ/7z0J04mExcS8tk/BfbtQxBRESkiFRqRWxA5/qBPNOzBQDfH7/Iwh2/GZxIRETEvqjUitiIWf3a0KqGLwDPrt7LidhEYwOJiIjYEZVaERvh6uTIkoe64uRgIiUjm78s30622Wx0LBEREbugUitiQ0Lr+DOzT2sAtp66zPwtEQYnEhERsQ8qtSI2ZlrvVrSv4w/A8+v2cexSgsGJREREbJ9KrYiNcXZ04D8PdcXF0YH0LDPjPt9GVraWIYiIiNyKSq2IDWpZw5d/9G8LwO6zcby2+YixgURERGycSq2IjXrqruZ0qR8IwD82HuRA9BWDE4mIiNgulVoRG+Xo4MB/HroTd2dHMrPNjP1sOxlZ2UbHEhERsUkqtSI2rHGgD/MGtAPg4IWrzP7uoMGJREREbJNKrYiNm9S1KT2DqwPw6g9H+OVMrMGJREREbI9KrYiNc3AwsXjknXi5OpFttjDu822kZmYZHUtERMSmqNSK2IEgfy/euK8DABGXr/HitwcMTiQiImJbVGpF7MT/dQqmf7NaALz581G2nLxkcCIRERHboVIrYidMJhOLHuiCr7sLFgv8Zfl2ktIzjY4lIiJiE1RqRexIrSoezL//DgBOxiUxbU24wYlERERsg0qtiJ15uF0DhoTUBeC97b+x6bcLBicSERExnkqtiJ0xmUy8N6wTAZ6uAIz/YjsJqRkGpxIRETGWSq2IHarm7c67wzsBcDY+hae+3mNwIhEREWOp1IrYqWGt6/NQaBAAS3afYM3Rc8YGEhERMZBKrYgdmz+0IzV93AF45MudxCWnG5xIRETEGCq1InbM38OVDx7oAsDFxFSmfPWLwYlERESMoVIrYufubV6bv3QMBuCL/VGsOHDa4EQiIiLlT6VWpAJ4Y3B76vl5AjB55S4uJaYanEhERKR8qdSKVAA+bi4svr4MIS4lnYkrd2GxWAxOJSIiUn5UakUqiN5NajKpa1MAvj58lqV7TxmcSEREpPyo1IpUIPMGhNKoqjcAT6z6hXPxyQYnEhERKR8qtSIViKerM/956E5MJkhIy+SvX+7UMgQREakUVGpFKpiuDarxVI8WAGz8NZpFO48bnEhERKTsqdSKVED/6N+W5tWrAPDM6r2ciks0OJGIiEjZUqkVqYDcnB1Z8lBXHB1MJKVn8X9f7MBs1jIEERGpuGy+1K5bt44WLVoQGhpq/fPMM88AcODAAUaMGEFoaCi9evVixYoVBqcVsR0d6lZleu9WAPx04hL/3hZhcCIREZGy42R0gNs5dOgQgwcPZu7cuXkeT0hIYMKECTz++OOMHDmS3bt3M3nyZJo2bUrr1q0NSitiW56/O4Q1R86xP/oq09fuo1+z2jQJ9DE6loiISKmz+ZnaQ4cO0apVq5se37hxI76+vowaNQonJye6dOnCoEGDWLZsmQEpRWyTi5Mj/3moK86ODqRmZjPu821km81GxxIRESl1Nj1TazabOXLkCO7u7ixevJjs7Gx69OjB008/zfHjx2nSpEme84ODg1m5cmWRXsNisZCSklKasSut1NTUPF/FNgT7ujKjZ3P+vukIO0/HMnfjAZ7q3jTfczWG9k9jaN80fvZPY1j6LBYLJpPptufZdKm9cuUKLVq0oF+/fsyfP5+rV6/y3HPP8cwzzxAYGIi7u3ue893c3IpcUDMzMzl27Fhpxq70oqKijI4gN+gXYGFlVTeOxKXx8vdHaOKcQiNftwLP1xjaP42hfdP42T+NYelycXG57Tk2XWoDAgLyLCdwd3fnmWee4YEHHmDo0KGkpaXlOT8tLQ1PT88ivYazszPBwcGlkreyS01NJSoqiqCgoJv+wiHG+7haHcLe/Z60LDPz9l1h8yM9cXbMuwJJY2j/NIb2TeNn/zSGpS8yMrJQ59l0qY2IiGDNmjX87W9/s047Z2Rk4ODgQOvWrfn444/znB8ZGUnjxo2L9BomkwkPD49Syyw5f/nQ79T2hNb3YM69ofztm70cuBDPW9tPMKtfm3zP1RjaP42hfdP42T+NYekpzNIDsPEPivn6+rJs2TIWL15MVlYW0dHR/POf/+T++++nX79+xMbGsmTJEjIzM9m5cyerV69m2LBhRscWsVmPd2tO94bVAHhl0yH2no0zOJGIiEjpsOlSW6NGDd5//32+//57OnbsyLBhwwgJCeHFF1/Ez8+Pjz76iPXr19OpUydmzpzJzJkz6dy5s9GxRWyWg4OJDx+8E08XJ7LMFsYt30ZaZrbRsURERErMppcfAHTs2JHly5fneywkJKTAYyKSv4ZVvXltUHsm/3cXRy4m8NKGA8wb2M7oWCIiIiVi0zO1IlI2HunSmLub1ATgjR+Psv3UZYMTiYiIlIxKrUglZDKZWPxAF3zcnDFbLPxl+XaS0zPZGhXDxqgEtkbFYLFYjI4pIiJSaDa//EBEykZdP0/eGnIHf1m+neOxidT9x39JSMvMObj9PI2qevPqoHbcH1LP2KAiIiKFoJlakUrszx0a0r5OVYDfC+11J+ISeeDjn1l16IwR0URERIpEpVakkotLTivwmNliYdqacC1FEBERm6dSK1KJbTl5mairybc8JzI2ka36IJmIiNg4lVqRSiz6WkqhzvtwVyR7zsaRlW0u40QiIiLFow+KiVRitXwKdwvHT/ec5NM9J/F0caJz/QDuDKpG1waBdK4fiLebcxmnFBERuT2VWpFKrFvDajSq6s2JuMQCz3FxdCDj+gxtckYW3x+/yPfHLwLgYDLRtrYfXRtU486gQMIaVKNWFd3rXEREyp9KrUglZjKZeHVQOx74+GfM+XwYzMFk4rPR3ejRqDo7omLYduoy207FsPtsLOlZZswWC+HnrhB+7grvbIkAoIG/F10b5MzkhjWoRrNqVXBwMJX3WxMRkUpGpVakkrs/pB5fjunOtDXhRMb+PmMbHODNvIG/71M7oEUdBrSoA0B6VjZ7z8ax7VQMW09dZnvUZa6kZABw6koSp64ksXTvSQD83F2483rB7dqgGh3qVsXVybGc36WIiFR0KrUiwv0h9RjSqi7fHTtDeMQJ2jcL5u7mdTGZ8p9hdXVy5M4G1bizQTWeoSVms4WIywlss87mXuZkXBIAV1MzWHv0PGuPnr9+rQMd6lTNmc1tmLNswd/Dtdzeq4iIVEwqtSIC5CxFCAsKpGpqLM2DAgostPlxcDDRooYvLWr48tfOjQGITkixltztpy6z7/xVzBYL6VnmnMejYmDzEQBa1qhy/cNn1QhrEEiQv1eRXl9ERESlVkTKRK0qHoxoU58RbeoDkJiWya4zsdaZ3J2nY0nOyALgyMUEjlxMYNHO4znX+rhb1+V2bVCN1jX9cHLUDoQiIlIwlVoRKRfebs7c3aQmdzepCUBWtpkD0VfZduoyW69/AO1iYioA0ddSWXHgNCsOnAbAy9WJzvVz1uXeGRRIp/oBeLlqKzEREfmdSq2IGMLJ0YH2davSvm5VHu/eHIvFwsm4JLZFXbbusnDsUgIASelZbPrtApt+uwCAo4OJ0Nr+1pncrkHVqOHjfsvXs1gsbDl5mehrKdTy8aBbw2pa4iAiUoGo1IqITTCZTDQK8KZRgDd/7tAIgNikNLbnrsuNimH32Tgys81kmy3sORvHnrNxvP1zzlZijap6W0tuWINqNK3mYy2tqw6d4bnV4Xn2421U1ZtXB/2+u4OIiNg3lVoRsVkBXm7c16ou97WqC0BqZhZ7zsZdX7IQw46oGOJTc7YSOxGXyIm4RD7Zk7OVWFUPV+5sEIivmwvLwk9ivmEb3hNxiTzw8c98Oaa7iq2ISAWgUisidsPd2YluDavTrWF1AMxmC0cvxbP11O9biZ2+mgxAXEo6q4+cu+XzmS0Wpq0JZ0irgrcvExER+6BSKyJ2y8HBRKuafrSq6cejdzYB4Fx8Mtuul9wNEeeJvL5fbkEiYxMJe2c9YQ2q0by6Ly1qVKF5tSp4u+mDaCIi9kSlVkQqlDq+nowM9WRkaBDL951i1NKtt71m5+lYdp6OzfNYXV+PnL13q1ehefUqtKjuS/PqVfB1dymr6CIiUgIqtSJSYdXy8SjUeSE1fTkXn8LV6+tzAc7Gp3A2PoUNEdE3PKf7TWW3RY0quiuaiIjBVGpFpMLq1rAajap659n14EbBAd7s+9tAAC4npXH0UgLHLiZw5FI8xy4lcPRSPDFJ6dbzo6+lEn0t1bq9WK7q3m60vD6b27zG9bJbvQqBXm5l8+ZERCQPlVoRqbBMJhOvDmrHAx//jNliuem4g8nEvIHtrB8Sq+7tTnVvd3oG18hzXkxS2vWCm8DRi/HW73NvFgFwKTGNS4kX+SHyYp5rAzxdaVnD9/qs7u+zu9W93fThNBGRUqRSKyIV2v0h9fhyTHemrQknMvb3GdvgAG/mDSzcPrWBXm4EernRvVH1PI9fSUnPU3aPXkrg2KUEziekWM+JTU7npxOX+OnEpTzX+nu4WNfpWstuDV9q+bgXu+xaLBa2RsWwNyqBOPcY+jSvp+IsIpWGSq2IVHj3h9RjSKu6bDl5mQvXUqlVxZ2wBiW/o5i/h2vOHc0aVMvzeEJqBscuJ3D0Ys7yhdyye+b6dmMAV1Iy2Hr9FsF/VMXN+feyW+P3md26vh63zHvTDSa2n9cNJkSkUlGpFZFKwWQy3TTTWlaquLvQuX4gnesH5nk8MS2TiMs3z+yeuvL7tmMJaZnsOB3DjtMxea71cnW6PqP7+4fUWtbwpZ6vJ18fOZvvEgvdYEJEKhOVWhGRcuLt5swd9QK4o15AnseT0zP5NebaTWX3RFwiuT01KT2LX87E8cuZuDzXujs7YDaT75ph0A0mRKTyUKkVETGYp6sz7epUpV2dqnkeT83M4reYaxy5mMCx3GUMFxOIjEsk+/p9f1Mzzbd9/sjYRO5+7zva1vandhUPalVxp3YVj5zvfTxwc3Ysk/clIlKeVGpFRGyUu7MTbWr506aWf57H07OyOX697K44cJpVh87c9rl+PHGJH2/4sFquqh6uN5fd619rV3Gnto8HVT1dNdMrIjZNpVZExM64Ojlabw9c08e9UKW2WTUfrqVlcjEx7aalCnEp6cSlpHPwwtVbvKYDtXw88p3pzS2/tap44OpUdrO+FouFLScvE30thVo+HnRrWPIP+4lIxaFSKyJixwp7g4nDz96HyWQiK9vMpaQ0ziekcD4hhejrX88npP7+/bUUktKz8jxHepaZU1eS8nyoLT8Bnq5/mOnNmeX9fdY354+/h0uRy+hNuzuAdncQkTxUakVE7FhRbzDh5OhgLZe3ci0tg/MJqfmU3xSir+U8fimfWd/Y5HRik9M5EF3wrK+bk6N1tvfGmd7fZ4Ddcbk+67vq0Bnt7iAit6VSKyJi50rjBhM38nFzwcfNhebVqxR4Tla2mYuJqfnO9EZff+x8QgrJGXlnfdOysjkZl8TJuFvP+gZ6uVLL253jsYna3UFEbkulVkSkAsi9wcR3x84QHnGC9s2Cubt52RY9J0cH6vh6UsfXs8BzLBYL19IyrbO85xNSib6WcsMMcCqXklK5sbfGJKUTk5R+2xyRsYnUnLWCOr6eBHi6Eujllv9Xz5w7w/m5u+DgYHsFWHeEEykZlVoRkQrCZDIRFhRI1dRYmgcF2EQhMplMVHF3oYq7Cy1q+BZ4Xma2mYvXUjl/LW/Z3XbqMtujYgq8LldMcjoxybcvwACODiaqergWWHwDvG746ulqXQpRVnRHOJGSU6kVERHDOTs6UNfPk7p+eWd9fz5xiZ7vbrzt9SPa1MfFySFnTW9SWk7JTUojNTP7pnOzzRYuJ6VxOSkNLiUUKl8VN2dr8Q3wdCPwD4U3wCtnBjjQ8/ei7OniVOi/VGjNsEjpUKkVERGbVdjdHT4f3S3fEpmcnkns9VncmKQ0YpLTiMv9PimdmOQ0YpPSiU3OKcLxqRn5vkZCWiYJaZl51izfipuTY07x9XKjqkfO19wiXPV68c0pxS48/c1erRkWKQUqtSIiYrOKurvDjTxdnfF0daa+v1ehXi8z25xTcHOL7o1frTPBOY/FpaRb7+72R2lZ2ZyNT+FsfErR3nA+ImMTeWTFTlrX9MPbzRkfN2d8XK9//cPPHkWYHTaK9hqWsqRSKyIiNq0sdncoiLOjAzV9PKjpc+stz3KZzRbi0zKsM7/5Fd+cbc7SrOekZd28JOJ2PtwVedtzHEymPCXXx80ZbzdnvF1vLsHers43nZuz44Uz3q5OODo4FDnj7WivYSlrKrUiImLzcnd32HLyMheupVKrijthDYyf5XNwMOHv4Yq/hytNq93+fIvFQkpGlnU5xObIi0xfu++217k6OZCeZb7lOWaLhfjUjAKXUBSFp4tT3vLr6pzvLLH3jaXYNW9xdnVywGQyVZp1w9rBwlgqtSIiYhdMJhPdG1U3OkaJmEwm65KIIH8vOtStyuKdkbddMxwxbTDZZguJ6ZkkpmdxLS2Da2mZXEvPzPmalkniH77/47HE3GN/OF7QGt5cyRlZJGdkcYHUEr1fZ0cHvF2cuJZe8GuaLRYmfLmDEzHX8Ly+jMLTxen3r86OeX72dHHCzcnR5rZlqww7WNj68hGVWhEREYMUZc2wk6MJPw9X/DxcgYL3Br6d3Nnia7cowdfSf/+ab2lOzynVt5s9zsw2c6UQM8dXUjJ4rhAz1n/k4eKIh/PvRTe39LrnU4Jzz/NwccQj92fX/Euzh3POeUVZglEZZqLtYfmISq2IiIiBynPNMOSdLa7pU7LnSs/K/r0E51OSE9My2REVw/8On73tczmYIJ/P3BUoJSOblIxsYgu5P3FRuTk54uHi+Hspds0tzb8XZE8XJ9ydHPlkz8lbzkQ/sWo3NbzdcHNywtXJAVcnx5u+ujg62NSs5x/ZS2lXqRURETGYEXeEKw2uTo64ejkS4OVW4Dk/n7hUqFL7w6S+dK4fSHJGFinXlz/88fuUzGzrY6nWx/54Xrb1/JQbzs99jozsW88s/1FaVjZpWdlcSSn5GuXzCSmEvbPhtue5ODrg5ny96Do6Flh+83u8oGtc8hy78Zo/fJ/P8zo6OGCxWHhudbhdbDunUisiImIDbPGOcKWhsHsN537wz9fdBV93lzLJkpVtthZhawnOzCI5PW9JTv3jsRtLc+YfinZGFjFJacSVQvEFyMg2F6l4lzVHBxNODqbbLjOJjE1k66nLdGto7Jp3lVoREREpMyXda7g0OTk64OPogo9b6ZXmwt717t/DOtK8ui/pWdnX/5h//5qdTcYff/7j1+ybH7Oem33ra/LbQ7koss2WQj9HdELJPlRYGlRqRUREpEyV97rh8lTYmehHujQp99n3bLM5n8J7YxG+uWCnZ5nJuP5zxOWEQu2TXKuKezm8o1tTqRUREZEyZ6t7DZeULc1E38jRwQEPFwc8XIpf9ywWCz9GXirU8hGjlf4tQ0RERETykbvX8MjQILo1rG73hTZX7kx0cIB3nseDA7xtZmeA4sot7Q4FjJWRpf1Gdj9TGxcXxwsvvMAvv/yCo6Mj9913H8899xxOTnb/1kRERMRO2OsOFoVhL8tH7L75TZ06lerVq7NlyxZiY2OZOHEiS5YsYfz48UZHExERkUqkou5gAfaxfMSuS+3p06f55Zdf+Pnnn3F3d6du3bpMmjSJf/7znyq1IiIiIqXI1m9Vbddrao8fP46vry/Vq//+C27UqBHR0dFcu3bNwGQiIiIiUp7seqY2OTkZd/e8W0jk/pySkoKPz+3v/2exWEhJSSmTfJVNampqnq9ifzSG9k9jaN80fvZPY1j6LBZLoZY52HWp9fDwuOk/NLk/e3p6Fuo5MjMzOXbsWKlnq8yioqKMjiAlpDG0fxpD+6bxs38aw9Ll4nL7G2bYdalt3Lgx8fHxxMbGEhAQAMCJEyeoUaMG3t7et7k6h7OzM8HBwWUZs9JITU0lKiqKoKCgm2bQxT5oDO2fxtC+afzsn8aw9EVG3v7mD2DnpTYoKIj27dvzyiuv8I9//IOrV6/y7rvvMnz48EI/h8lkwsPDowxTVj7u7u76ndo5jaH90xjaN42f/dMYlp7C7rBg1x8UA5g/fz5ZWVn07t2bBx54gG7dujFp0iSjY4mIiIhIObLrmVqAgIAA5s+fb3QMERERETGQ3c/UioiIiIio1IqIiIiI3VOpFRERERG7p1IrIiIiInZPpVZERERE7J7JYrFYjA5hlPDwcCwWS6HuUiG3Z7FYyMzMxNnZudB7yolt0RjaP42hfdP42T+NYenLyMjAZDLRrl27W55n91t6lYT+w1a6TCaT/oJg5zSG9k9jaN80fvZPY1j6TCZToTpbpZ6pFREREZGKQWtqRURERMTuqdSKiIiIiN1TqRURERERu6dSKyIiIiJ2T6VWREREROyeSq2IiIiI2D2VWhERERGxeyq1IiIiImL3VGqlVERERDBu3Dg6duxI165defbZZ7ly5YrRsaSIsrOzGT16NNOmTTM6ihRRfHw8zz77LJ06deKOO+5g0qRJXL582ehYUgRHjhxh1KhRdOjQgbCwMF5++WUyMjKMjiWFcOXKFfr06cOuXbusjx04cIARI0YQGhpKr169WLFihYEJKweVWimxtLQ0xo8fT2hoKFu3bmXNmjXEx8czY8YMo6NJES1YsIA9e/YYHUOKYcqUKaSkpPDdd9+xefNmHB0deeGFF4yOJYVkNpt55JFH6NevH7/88gsrV65k69atLFq0yOhocht79+5l5MiRnDlzxvpYQkICEyZMYMiQIezevZs5c+Ywd+5cDh48aGDSik+lVkosOjqaZs2aMXnyZFxcXPDz82PkyJHs3r3b6GhSBDt27GDjxo307dvX6ChSRIcPH+bAgQPMmzcPHx8fvLy8mD17Nk8//bTR0aSQEhISiImJwWw2k3v3egcHB9zd3Q1OJreyatUqnn76aZ588sk8j2/cuBFfX19GjRqFk5MTXbp0YdCgQSxbtsygpJWDSq2UWMOGDVm8eDGOjo7WxzZs2EDLli0NTCVFERcXx/PPP88bb7yh/xO1QwcPHiQ4OJgvv/ySPn36EBYWxquvvkpgYKDR0aSQ/Pz8GDt2LK+++iohISH06NGDoKAgxo4da3Q0uYWwsDC+++477r333jyPHz9+nCZNmuR5LDg4mIiIiPKMV+mo1EqpslgsvPnmm2zevJnnn3/e6DhSCGazmWeeeYZx48bRrFkzo+NIMSQkJPDrr78SFRXFqlWr+N///selS5d47rnnjI4mhWQ2m3Fzc+OFF15g//79rFmzhhMnTjB//nyjo8ktBAYG4uTkdNPjycnJN00QuLm5kZKSUl7RKiWVWik1SUlJPP7446xevZqlS5fStGlToyNJIbz//vu4uLgwevRoo6NIMbm4uADw/PPP4+XlRUBAAFOnTuWnn34iOTnZ4HRSGN999x0bNmzg4YcfxsXFhcaNGzN58mQ+//xzo6NJMbi7u5OWlpbnsbS0NDw9PQ1KVDnc/NcLkWI4c+YMf/3rX6lVqxYrV67E39/f6EhSSF9//TWXL1+mQ4cOANb/Id60aZM+NGYngoODMZvNZGZm4urqCuTM/AHW9Zli2y5cuHDTTgdOTk44OzsblEhKokmTJmzbti3PY5GRkTRu3NigRJWDZmqlxBISEhgzZgzt2rXjww8/VKG1M+vXryc8PJw9e/awZ88eBg4cyMCBA1Vo7cidd95J3bp1mTFjBsnJyVy5coU333yTu+++Gy8vL6PjSSGEhYURExPDwoULyc7O5uzZs7z33nsMGjTI6GhSDH369CE2NpYlS5aQmZnJzp07Wb16NcOGDTM6WoWmUisl9tVXXxEdHc23335L+/btCQ0Ntf4RkbLn7OzMp59+iqOjI/369aNfv37UqFGDV155xehoUkjBwcG8//77/PDDD3Tq1Ik///nP9OrV66ZP1Yt98PPz46OPPmL9+vV06tSJmTNnMnPmTDp37mx0tArNZNG/TYmIiIiIndNMrYiIiIjYPZVaEREREbF7KrUiIiIiYvdUakVERETE7qnUioiIiIjdU6kVEREREbunUisiImVCO0aKSHlSqRURmzB69GhatGjBoUOH8j3eq1cvpk2bVi5Z3nnnHZo2bVour1VUr7/+Op06daJt27b873//K/A8s9nMihUrGDVqFJ06daJdu3bcf//9fPLJJ3lux3ru3DmaNm3KV199Vao59+7dyyOPPFKqz1kciYmJ9O7dmxMnTgC3/8/Rtm3bGDJkCJmZmeUVUURKiUqtiNiM7Oxspk+fnqd0ye9+++03Fi1aRN++fVm8eDHdu3fP97zU1FTGjRvHnDlzaN26NfPmzWP+/PmEhYXx+uuvM3HixDL/Ha9YsYLIyMgyfY3CmDNnDj179qRRo0aFOr9r167UqFGD9957r4yTiUhpczI6gIhILm9vb44fP86///1v3R40H/Hx8QAMGDCADh06FHje3LlzCQ8P59NPP6Vt27bWx8PCwmjRogVTp05l2bJljBs3rowTG+vIkSN88803bN68uUjXTZo0iVGjRvHggw9SrVq1MkonIqVNM7UiYjOaN2/OkCFDWLx4MYcPH77lufn9M/JXX31F06ZNOXfuHJCzjKB///5s2rSJgQMHEhISwuDBg9m3bx/79+9nxIgRtG7dmoEDB7Jjx46bXmPTpk3069ePkJAQRowYcdM58fHxvPjii9x5552EhITwwAMP3HRO06ZNWbBgAcOGDaN9+/a8++67Bb6ndevWMXToUEJDQ+natSsvvvgiCQkJ1vcyevRoAMaMGUOvXr3yfY4rV67w3//+l2HDhuUptLnuuece/u///o8aNWrke/2Nv8NcN/6+t2/fzsiRIwkNDeWOO+5g0qRJnDx5EoBp06axatUqzp8/n2dpQ3p6Oq+99ho9evSgVatWDBo0iHXr1t30Oq+88gpjxoyhXbt2vPjiiwB8+umn9O/fn5CQELp168ZLL71EUlJSgb9LgPfff59OnTpRvXr1As9ZuXIlzZo145133rE+1rp1a2rVqsWSJUtu+fwiYltUakXEpjz//PP4+/uX2jKEixcvMnfuXB599FHeeustEhISePzxx3nqqad44IEH+Ne//oXZbObJJ58kLS0tz7UzZszgz3/+M++88w6enp789a9/tf6Tenp6OmPGjOH777/nySefZMGCBdSoUYPx48ffVGzfe+89+vXrx7/+9S969+6db853332XJ598kjZt2jB//nwmT57Mhg0bGD16NGlpaYwYMcJa8F588UUWLFiQ7/Ps2LGDrKwsevbsWeDv5Nlnn+Wee+4p9O/wRmfPnmXixIm0bNmS9957j5dffpmTJ08yYcIEzGYzkyZNokePHgQGBvLFF19w1113YbFYmDx5MsuXL2fcuHG89957hIaG8uSTT960NnjZsmU0bdqUd955h8GDB7N27VpeffVVRo0axYcffsjkyZP5+uuvefnllwvMmJyczA8//ED//v0LPGfdunW88MILPProo0yZMiXPsf79+/PNN98U+3ckIuVPyw9ExKb4+Pjw97//nYkTJ5bKMoTU1FRmzZplXX964sQJ3njjDebM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\n",
      "text/plain": [
       "<Figure size 800x550 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot a line chart with all the inertia values computed with \n",
    "# the different values of k to visually identify the optimal value for k.\n",
    "plt.plot(elbow_df_pca['k'], elbow_df_pca['inertia'], marker='o')\n",
    "plt.xlabel('Number of Clusters (k)')\n",
    "plt.ylabel('Inertia')\n",
    "plt.title('Elbow Curve')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Answer the following questions: \n",
    "\n",
    "* **Question:** What is the best value for `k` when using the PCA data?\n",
    "\n",
    "  * **Answer:** The best value of `k` when using the PCA data is **4**\n",
    "\n",
    "\n",
    "* **Question:** Does it differ from the best k value found using the original data?\n",
    "\n",
    "  * **Answer:** Nom the value of `k` didn't differ using the original data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Cluster Cryptocurrencies with K-means Using the PCA Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Initialize the K-Means model using the best value for k\n",
    "kmeans_best = KMeans(n_clusters=4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KMeans(n_clusters=4)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KMeans</label><div class=\"sk-toggleable__content\"><pre>KMeans(n_clusters=4)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "KMeans(n_clusters=4)"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Fit the K-Means model using the PCA data\n",
    "kmeans_best.fit(df_market_data_pca)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1 1 0 0 1 1 1 1 1 0 0 0 0 1 0 1 0 0 1 0 0 1 0 0 0 0 0 0 1 0 0 0 2 1 0 0 3\n",
      " 0 0 0 0]\n"
     ]
    }
   ],
   "source": [
    "# Predict the clusters to group the cryptocurrencies using the PCA data\n",
    "kmeans_best.fit_predict(df_market_data_pca)\n",
    "\n",
    "# Print the resulting array of cluster values.\n",
    "cluster_labels_data_pca = kmeans_optimal.fit_predict(df_market_data_pca)\n",
    "print(cluster_labels_data_pca)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PC1</th>\n",
       "      <th>PC2</th>\n",
       "      <th>PC3</th>\n",
       "      <th>predicted_cluster</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>coin_id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>bitcoin</th>\n",
       "      <td>2.059139</td>\n",
       "      <td>-0.536684</td>\n",
       "      <td>-0.438238</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ethereum</th>\n",
       "      <td>1.956401</td>\n",
       "      <td>-0.410821</td>\n",
       "      <td>-1.016966</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tether</th>\n",
       "      <td>-0.990142</td>\n",
       "      <td>-0.454228</td>\n",
       "      <td>0.690021</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ripple</th>\n",
       "      <td>-0.973189</td>\n",
       "      <td>-0.494650</td>\n",
       "      <td>0.551234</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bitcoin-cash</th>\n",
       "      <td>3.330367</td>\n",
       "      <td>-1.022311</td>\n",
       "      <td>-0.501341</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   PC1       PC2       PC3  predicted_cluster\n",
       "coin_id                                                      \n",
       "bitcoin       2.059139 -0.536684 -0.438238                  1\n",
       "ethereum      1.956401 -0.410821 -1.016966                  1\n",
       "tether       -0.990142 -0.454228  0.690021                  0\n",
       "ripple       -0.973189 -0.494650  0.551234                  0\n",
       "bitcoin-cash  3.330367 -1.022311 -0.501341                  1"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create a copy of the DataFrame with the PCA data\n",
    "df_market_data_pca_copy = df_market_data_pca.copy()\n",
    "\n",
    "# Add a new column to the DataFrame with the predicted clusters\n",
    "df_market_data_pca_copy['predicted_cluster'] = cluster_labels_data_pca\n",
    "\n",
    "# Display sample data\n",
    "df_market_data_pca_copy.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [
    {
     "data": {},
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.holoviews_exec.v0+json": "",
      "text/html": [
       "<div id='1605'>\n",
       "  <div class=\"bk-root\" id=\"502ed9a2-d9e2-4944-a7c4-25e2e4c1fc50\" data-root-id=\"1605\"></div>\n",
       "</div>\n",
       "<script type=\"application/javascript\">(function(root) {\n",
       "  function embed_document(root) {\n",
       "    var docs_json = {\"bb1f9548-8c95-43f6-84d2-1a8bd38b6bfa\":{\"defs\":[{\"extends\":null,\"module\":null,\"name\":\"ReactiveHTML1\",\"overrides\":[],\"properties\":[]},{\"extends\":null,\"module\":null,\"name\":\"FlexBox1\",\"overrides\":[],\"properties\":[{\"default\":\"flex-start\",\"kind\":null,\"name\":\"align_content\"},{\"default\":\"flex-start\",\"kind\":null,\"name\":\"align_items\"},{\"default\":\"row\",\"kind\":null,\"name\":\"flex_direction\"},{\"default\":\"wrap\",\"kind\":null,\"name\":\"flex_wrap\"},{\"default\":\"flex-start\",\"kind\":null,\"name\":\"justify_content\"}]},{\"extends\":null,\"module\":null,\"name\":\"GridStack1\",\"overrides\":[],\"properties\":[{\"default\":\"warn\",\"kind\":null,\"name\":\"mode\"},{\"default\":null,\"kind\":null,\"name\":\"ncols\"},{\"default\":null,\"kind\":null,\"name\":\"nrows\"},{\"default\":true,\"kind\":null,\"name\":\"allow_resize\"},{\"default\":true,\"kind\":null,\"name\":\"allow_drag\"},{\"default\":[],\"kind\":null,\"name\":\"state\"}]},{\"extends\":null,\"module\":null,\"name\":\"click1\",\"overrides\":[],\"properties\":[{\"default\":\"\",\"kind\":null,\"name\":\"terminal_output\"},{\"default\":\"\",\"kind\":null,\"name\":\"debug_name\"},{\"default\":0,\"kind\":null,\"name\":\"clears\"}]},{\"extends\":null,\"module\":null,\"name\":\"NotificationAreaBase1\",\"overrides\":[],\"properties\":[{\"default\":\"bottom-right\",\"kind\":null,\"name\":\"position\"},{\"default\":0,\"kind\":null,\"name\":\"_clear\"}]},{\"extends\":null,\"module\":null,\"name\":\"NotificationArea1\",\"overrides\":[],\"properties\":[{\"default\":[],\"kind\":null,\"name\":\"notifications\"},{\"default\":\"bottom-right\",\"kind\":null,\"name\":\"position\"},{\"default\":0,\"kind\":null,\"name\":\"_clear\"},{\"default\":[{\"background\":\"#ffc107\",\"icon\":{\"className\":\"fas fa-exclamation-triangle\",\"color\":\"white\",\"tagName\":\"i\"},\"type\":\"warning\"},{\"background\":\"#007bff\",\"icon\":{\"className\":\"fas fa-info-circle\",\"color\":\"white\",\"tagName\":\"i\"},\"type\":\"info\"}],\"kind\":null,\"name\":\"types\"}]},{\"extends\":null,\"module\":null,\"name\":\"Notification\",\"overrides\":[],\"properties\":[{\"default\":null,\"kind\":null,\"name\":\"background\"},{\"default\":3000,\"kind\":null,\"name\":\"duration\"},{\"default\":null,\"kind\":null,\"name\":\"icon\"},{\"default\":\"\",\"kind\":null,\"name\":\"message\"},{\"default\":null,\"kind\":null,\"name\":\"notification_type\"},{\"default\":false,\"kind\":null,\"name\":\"_destroyed\"}]},{\"extends\":null,\"module\":null,\"name\":\"TemplateActions1\",\"overrides\":[],\"properties\":[{\"default\":0,\"kind\":null,\"name\":\"open_modal\"},{\"default\":0,\"kind\":null,\"name\":\"close_modal\"}]},{\"extends\":null,\"module\":null,\"name\":\"MaterialTemplateActions1\",\"overrides\":[],\"properties\":[{\"default\":0,\"kind\":null,\"name\":\"open_modal\"},{\"default\":0,\"kind\":null,\"name\":\"close_modal\"}]}],\"roots\":{\"references\":[{\"attributes\":{\"fill_color\":{\"field\":\"color\",\"transform\":{\"id\":\"1639\"}},\"hatch_color\":{\"field\":\"color\",\"transform\":{\"id\":\"1639\"}},\"line_color\":{\"field\":\"color\",\"transform\":{\"id\":\"1639\"}},\"size\":{\"value\":5.477225575051661},\"x\":{\"field\":\"PC1\"},\"y\":{\"field\":\"PC2\"}},\"id\":\"1646\",\"type\":\"Scatter\"},{\"attributes\":{\"coordinates\":null,\"group\":null,\"text_color\":\"black\",\"text_font_size\":\"12pt\"},\"id\":\"1610\",\"type\":\"Title\"},{\"attributes\":{\"data\":{\"PC1\":{\"__ndarray__\":\"5E4dzB15AEDnMnEEa03/P07PTEo9r++/6S0fbVwk77/AkwFpl6QKQHCy6xYjOARAhv97yejUBECwvXof5nECQK+uKJOaR/0/Uv1xoj9z678SBegJUYcAwG+w8zs3B/C/8spRAChb8r/Nd8JJ2/ENQMXusbuIEei/IGNvWYMA9j8vk9u5IUn+v9G8an0l0vK/elLMyhTjAkAWJ1FXzDbvv3dCfWw2CPm/fwYDhoZVAECcZFQtzGP3vwEw7hNur+2/RmIybOjn5r/Y/fy7CVvvv+zH/szXx+2/R+JDDeLPAsCXKtEw8BoAQG4RxWdZ5/a/ypXa0Kr067+VJoQwafHtvywORq0x0AHAgSM3rGRQ+T8XKLBn0RMBwKzrPmXmNem/K4r2W8xYEUBI+7keTzkCwKnZyU1Ur+K/HPD24Pvk7r9biVp9VVbxvw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[41]},\"PC2\":{\"__ndarray__\":\"vpcg4YQs4b8OStI15krav6j86ZgREt2/ZdW/J1io37/n/W80Y1vwvyr3dl+oCdu/S6u2llrN2L95IsnXNPnRv0CCwvmfYOO/Xg8QCmvp6L+MdnI2tpDVv/j1zlPbcd2/xaqN1QJV578RL4erJkHOP/vK0ZRqEdq/vCsggKZ66b8AASEEzqmRv9GwHXhlH+G/lVtzjh7kzr+xeOt4jBHhvxGVkljqQNu/cWqDm6JR4b99O7MLEaXdv1ANagHBdNu/u9/W17fZ4z+XQB6szhzevyX/Mq7mhOm/na3Z3/Z/5b81K2dGNgTYv8RVRU2NNAVAt5qF6vCc5L8Ty8wgvWvjv8g9ovDnkh9AL5Zg8z8R1792MLzZTr7nP3ZLCTmp3r0/9SjWh5eCFED9OE2ZhRXov9PEeeo8KOO/8vRn7DmQ3r/ZOXYbfZvUvw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[41]},\"color\":{\"__ndarray__\":\"AQAAAAEAAAAAAAAAAAAAAAEAAAABAAAAAQAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAACAAAAAQAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAA=\",\"dtype\":\"int32\",\"order\":\"little\",\"shape\":[41]},\"predicted_cluster\":{\"__ndarray__\":\"AQAAAAEAAAAAAAAAAAAAAAEAAAABAAAAAQAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAACAAAAAQAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAA=\",\"dtype\":\"int32\",\"order\":\"little\",\"shape\":[41]}},\"selected\":{\"id\":\"1641\"},\"selection_policy\":{\"id\":\"1670\"}},\"id\":\"1640\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis_label\":\"PC1\",\"coordinates\":null,\"formatter\":{\"id\":\"1653\"},\"group\":null,\"major_label_policy\":{\"id\":\"1654\"},\"ticker\":{\"id\":\"1619\"}},\"id\":\"1618\",\"type\":\"LinearAxis\"},{\"attributes\":{\"source\":{\"id\":\"1640\"}},\"id\":\"1649\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1666\",\"type\":\"NoOverlap\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1640\"},\"glyph\":{\"id\":\"1643\"},\"group\":null,\"hover_glyph\":{\"id\":\"1646\"},\"muted_glyph\":{\"id\":\"1647\"},\"nonselection_glyph\":{\"id\":\"1644\"},\"selection_glyph\":{\"id\":\"1645\"},\"view\":{\"id\":\"1649\"}},\"id\":\"1648\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1619\",\"type\":\"BasicTicker\"},{\"attributes\":{\"axis\":{\"id\":\"1618\"},\"coordinates\":null,\"grid_line_color\":null,\"group\":null,\"ticker\":null},\"id\":\"1621\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1616\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"1627\",\"type\":\"PanTool\"},{\"attributes\":{\"bar_line_color\":\"black\",\"color_mapper\":{\"id\":\"1639\"},\"coordinates\":null,\"group\":null,\"label_standoff\":8,\"location\":[0,0],\"major_label_policy\":{\"id\":\"1666\"},\"major_tick_line_color\":\"black\",\"ticker\":{\"id\":\"1650\"}},\"id\":\"1651\",\"type\":\"ColorBar\"},{\"attributes\":{\"axis_label\":\"PC2\",\"coordinates\":null,\"formatter\":{\"id\":\"1656\"},\"group\":null,\"major_label_policy\":{\"id\":\"1657\"},\"ticker\":{\"id\":\"1623\"}},\"id\":\"1622\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"1653\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"axis\":{\"id\":\"1622\"},\"coordinates\":null,\"dimension\":1,\"grid_line_color\":null,\"group\":null,\"ticker\":null},\"id\":\"1625\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1650\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1623\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1628\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"1670\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1614\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"1626\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"1656\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"overlay\":{\"id\":\"1631\"}},\"id\":\"1629\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"1630\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"1657\",\"type\":\"AllLabels\"},{\"attributes\":{\"bottom_units\":\"screen\",\"coordinates\":null,\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"group\":null,\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1631\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"1654\",\"type\":\"AllLabels\"},{\"attributes\":{\"active_drag\":{\"id\":\"1627\"},\"active_scroll\":{\"id\":\"1628\"},\"tools\":[{\"id\":\"1608\"},{\"id\":\"1626\"},{\"id\":\"1627\"},{\"id\":\"1628\"},{\"id\":\"1629\"},{\"id\":\"1630\"}]},\"id\":\"1632\",\"type\":\"Toolbar\"},{\"attributes\":{\"children\":[{\"id\":\"1609\"}],\"height\":300,\"margin\":[0,0,0,0],\"name\":\"Row01654\",\"sizing_mode\":\"fixed\",\"tags\":[\"embedded\"],\"width\":700},\"id\":\"1605\",\"type\":\"Row\"},{\"attributes\":{},\"id\":\"1641\",\"type\":\"Selection\"},{\"attributes\":{\"fill_color\":{\"field\":\"color\",\"transform\":{\"id\":\"1639\"}},\"hatch_color\":{\"field\":\"color\",\"transform\":{\"id\":\"1639\"}},\"line_color\":{\"field\":\"color\",\"transform\":{\"id\":\"1639\"}},\"size\":{\"value\":5.477225575051661},\"x\":{\"field\":\"PC1\"},\"y\":{\"field\":\"PC2\"}},\"id\":\"1643\",\"type\":\"Scatter\"},{\"attributes\":{\"fill_color\":{\"field\":\"color\",\"transform\":{\"id\":\"1639\"}},\"hatch_color\":{\"field\":\"color\",\"transform\":{\"id\":\"1639\"}},\"line_color\":{\"field\":\"color\",\"transform\":{\"id\":\"1639\"}},\"size\":{\"value\":5.477225575051661},\"x\":{\"field\":\"PC1\"},\"y\":{\"field\":\"PC2\"}},\"id\":\"1645\",\"type\":\"Scatter\"},{\"attributes\":{\"end\":4.623355173468611,\"reset_end\":4.623355173468611,\"reset_start\":-2.638143483244499,\"start\":-2.638143483244499,\"tags\":[[[\"PC1\",\"PC1\",null]]]},\"id\":\"1606\",\"type\":\"Range1d\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.2},\"fill_color\":{\"field\":\"color\",\"transform\":{\"id\":\"1639\"}},\"hatch_alpha\":{\"value\":0.2},\"hatch_color\":{\"field\":\"color\",\"transform\":{\"id\":\"1639\"}},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"field\":\"color\",\"transform\":{\"id\":\"1639\"}},\"size\":{\"value\":5.477225575051661},\"x\":{\"field\":\"PC1\"},\"y\":{\"field\":\"PC2\"}},\"id\":\"1647\",\"type\":\"Scatter\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"field\":\"color\",\"transform\":{\"id\":\"1639\"}},\"hatch_alpha\":{\"value\":0.1},\"hatch_color\":{\"field\":\"color\",\"transform\":{\"id\":\"1639\"}},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"field\":\"color\",\"transform\":{\"id\":\"1639\"}},\"size\":{\"value\":5.477225575051661},\"x\":{\"field\":\"PC1\"},\"y\":{\"field\":\"PC2\"}},\"id\":\"1644\",\"type\":\"Scatter\"},{\"attributes\":{\"callback\":null,\"renderers\":[{\"id\":\"1648\"}],\"tags\":[\"hv_created\"],\"tooltips\":[[\"PC1\",\"@{PC1}\"],[\"PC2\",\"@{PC2}\"],[\"predicted_cluster\",\"@{predicted_cluster}\"]]},\"id\":\"1608\",\"type\":\"HoverTool\"},{\"attributes\":{\"end\":8.78504033696752,\"reset_end\":8.78504033696752,\"reset_start\":-1.9138888371539,\"start\":-1.9138888371539,\"tags\":[[[\"PC2\",\"PC2\",null]]]},\"id\":\"1607\",\"type\":\"Range1d\"},{\"attributes\":{\"below\":[{\"id\":\"1618\"}],\"center\":[{\"id\":\"1621\"},{\"id\":\"1625\"}],\"height\":300,\"left\":[{\"id\":\"1622\"}],\"margin\":[5,5,5,5],\"min_border_bottom\":10,\"min_border_left\":10,\"min_border_right\":10,\"min_border_top\":10,\"renderers\":[{\"id\":\"1648\"}],\"right\":[{\"id\":\"1651\"}],\"sizing_mode\":\"fixed\",\"title\":{\"id\":\"1610\"},\"toolbar\":{\"id\":\"1632\"},\"width\":700,\"x_range\":{\"id\":\"1606\"},\"x_scale\":{\"id\":\"1614\"},\"y_range\":{\"id\":\"1607\"},\"y_scale\":{\"id\":\"1616\"}},\"id\":\"1609\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"high\":3,\"low\":0,\"palette\":[\"#440154\",\"#440255\",\"#440357\",\"#450558\",\"#45065a\",\"#45085b\",\"#46095c\",\"#460b5e\",\"#460c5f\",\"#460e61\",\"#470f62\",\"#471163\",\"#471265\",\"#471466\",\"#471567\",\"#471669\",\"#47186a\",\"#48196b\",\"#481a6c\",\"#481c6e\",\"#481d6f\",\"#481e70\",\"#482071\",\"#482172\",\"#482273\",\"#482374\",\"#472575\",\"#472676\",\"#472777\",\"#472878\",\"#472a79\",\"#472b7a\",\"#472c7b\",\"#462d7c\",\"#462f7c\",\"#46307d\",\"#46317e\",\"#45327f\",\"#45347f\",\"#453580\",\"#453681\",\"#443781\",\"#443982\",\"#433a83\",\"#433b83\",\"#433c84\",\"#423d84\",\"#423e85\",\"#424085\",\"#414186\",\"#414286\",\"#404387\",\"#404487\",\"#3f4587\",\"#3f4788\",\"#3e4888\",\"#3e4989\",\"#3d4a89\",\"#3d4b89\",\"#3d4c89\",\"#3c4d8a\",\"#3c4e8a\",\"#3b508a\",\"#3b518a\",\"#3a528b\",\"#3a538b\",\"#39548b\",\"#39558b\",\"#38568b\",\"#38578c\",\"#37588c\",\"#37598c\",\"#365a8c\",\"#365b8c\",\"#355c8c\",\"#355d8c\",\"#345e8d\",\"#345f8d\",\"#33608d\",\"#33618d\",\"#32628d\",\"#32638d\",\"#31648d\",\"#31658d\",\"#31668d\",\"#30678d\",\"#30688d\",\"#2f698d\",\"#2f6a8d\",\"#2e6b8e\",\"#2e6c8e\",\"#2e6d8e\",\"#2d6e8e\",\"#2d6f8e\",\"#2c708e\",\"#2c718e\",\"#2c728e\",\"#2b738e\",\"#2b748e\",\"#2a758e\",\"#2a768e\",\"#2a778e\",\"#29788e\",\"#29798e\",\"#287a8e\",\"#287a8e\",\"#287b8e\",\"#277c8e\",\"#277d8e\",\"#277e8e\",\"#267f8e\",\"#26808e\",\"#26818e\",\"#25828e\",\"#25838d\",\"#24848d\",\"#24858d\",\"#24868d\",\"#23878d\",\"#23888d\",\"#23898d\",\"#22898d\",\"#228a8d\",\"#228b8d\",\"#218c8d\",\"#218d8c\",\"#218e8c\",\"#208f8c\",\"#20908c\",\"#20918c\",\"#1f928c\",\"#1f938b\",\"#1f948b\",\"#1f958b\",\"#1f968b\",\"#1e978a\",\"#1e988a\",\"#1e998a\",\"#1e998a\",\"#1e9a89\",\"#1e9b89\",\"#1e9c89\",\"#1e9d88\",\"#1e9e88\",\"#1e9f88\",\"#1ea087\",\"#1fa187\",\"#1fa286\",\"#1fa386\",\"#20a485\",\"#20a585\",\"#21a685\",\"#21a784\",\"#22a784\",\"#23a883\",\"#23a982\",\"#24aa82\",\"#25ab81\",\"#26ac81\",\"#27ad80\",\"#28ae7f\",\"#29af7f\",\"#2ab07e\",\"#2bb17d\",\"#2cb17d\",\"#2eb27c\",\"#2fb37b\",\"#30b47a\",\"#32b57a\",\"#33b679\",\"#35b778\",\"#36b877\",\"#38b976\",\"#39b976\",\"#3bba75\",\"#3dbb74\",\"#3ebc73\",\"#40bd72\",\"#42be71\",\"#44be70\",\"#45bf6f\",\"#47c06e\",\"#49c16d\",\"#4bc26c\",\"#4dc26b\",\"#4fc369\",\"#51c468\",\"#53c567\",\"#55c666\",\"#57c665\",\"#59c764\",\"#5bc862\",\"#5ec961\",\"#60c960\",\"#62ca5f\",\"#64cb5d\",\"#67cc5c\",\"#69cc5b\",\"#6bcd59\",\"#6dce58\",\"#70ce56\",\"#72cf55\",\"#74d054\",\"#77d052\",\"#79d151\",\"#7cd24f\",\"#7ed24e\",\"#81d34c\",\"#83d34b\",\"#86d449\",\"#88d547\",\"#8bd546\",\"#8dd644\",\"#90d643\",\"#92d741\",\"#95d73f\",\"#97d83e\",\"#9ad83c\",\"#9dd93a\",\"#9fd938\",\"#a2da37\",\"#a5da35\",\"#a7db33\",\"#aadb32\",\"#addc30\",\"#afdc2e\",\"#b2dd2c\",\"#b5dd2b\",\"#b7dd29\",\"#bade27\",\"#bdde26\",\"#bfdf24\",\"#c2df22\",\"#c5df21\",\"#c7e01f\",\"#cae01e\",\"#cde01d\",\"#cfe11c\",\"#d2e11b\",\"#d4e11a\",\"#d7e219\",\"#dae218\",\"#dce218\",\"#dfe318\",\"#e1e318\",\"#e4e318\",\"#e7e419\",\"#e9e419\",\"#ece41a\",\"#eee51b\",\"#f1e51c\",\"#f3e51e\",\"#f6e61f\",\"#f8e621\",\"#fae622\",\"#fde724\"]},\"id\":\"1639\",\"type\":\"LinearColorMapper\"}],\"root_ids\":[\"1605\"]},\"title\":\"Bokeh Application\",\"version\":\"2.4.3\"}};\n",
       "    var render_items = [{\"docid\":\"bb1f9548-8c95-43f6-84d2-1a8bd38b6bfa\",\"root_ids\":[\"1605\"],\"roots\":{\"1605\":\"502ed9a2-d9e2-4944-a7c4-25e2e4c1fc50\"}}];\n",
       "    root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "    for (const render_item of render_items) {\n",
       "      for (const root_id of render_item.root_ids) {\n",
       "\tconst id_el = document.getElementById(root_id)\n",
       "\tif (id_el.children.length && (id_el.children[0].className === 'bk-root')) {\n",
       "\t  const root_el = id_el.children[0]\n",
       "\t  root_el.id = root_el.id + '-rendered'\n",
       "\t}\n",
       "      }\n",
       "    }\n",
       "  }\n",
       "  if (root.Bokeh !== undefined && root.Bokeh.Panel !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined && root.Bokeh.Panel !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else if (document.readyState == \"complete\") {\n",
       "        attempts++;\n",
       "        if (attempts > 200) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 25, root)\n",
       "  }\n",
       "})(window);</script>"
      ],
      "text/plain": [
       ":Scatter   [PC1]   (PC2,predicted_cluster)"
      ]
     },
     "execution_count": 81,
     "metadata": {
      "application/vnd.holoviews_exec.v0+json": {
       "id": "1605"
      }
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create a scatter plot using hvPlot by setting \n",
    "# `x=\"PC1\"` and `y=\"PC2\"`. \n",
    "# Color the graph points with the labels found using K-Means and \n",
    "# add the crypto name in the `hover_cols` parameter to identify \n",
    "# the cryptocurrency represented by each data point.\n",
    "scatter_plot = df_market_data_pca_copy.hvplot.scatter(\n",
    "    x=\"PC1\",\n",
    "    y=\"PC2\",\n",
    "    c=\"predicted_cluster\",\n",
    "    cmap=\"viridis\",\n",
    "    hover_cols=[\"crypto_name\"]\n",
    ")\n",
    "\n",
    "scatter_plot"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Visualize and Compare the Results\n",
    "\n",
    "In this section, you will visually analyze the cluster analysis results by contrasting the outcome with and without using the optimization techniques."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x550 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Composite plot to contrast the Elbow curves\n",
    "plt.style.use('seaborn')\n",
    "k_values_original = elbow_df['k']\n",
    "inertia_values_original = elbow_df['inertia']\n",
    "\n",
    "k_values_pca = elbow_df_pca['k']\n",
    "inertia_values_pca = elbow_df_pca['inertia']\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "ax.plot(k_values_original, inertia_values_original, marker='o', color='g', \n",
    "        label='elbow original data')\n",
    "ax.plot(k_values_pca, inertia_values_pca, marker='o', color='b', \n",
    "        label='elbow pca data')\n",
    "ax.set_xlabel('Number of Clusters (k)')\n",
    "ax.set_ylabel('Inertia')\n",
    "ax.set_title('Elbow Curve')\n",
    "ax.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_cluster_labels_pca = pd.DataFrame({'Label':cluster_labels_data_pca})\n",
    "df_clsuter_labels = pd.DataFrame({'Label':cluster_labels})\n",
    "\n",
    "labels = df_market_data_pca_copy.predicted_cluster\n",
    "labels_original = scaled_df_copy.predicted_cluster"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1200x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Composite plot to contrast the clusters\n",
    "# YOUR CODE HERE!\n",
    "\n",
    "fig, ax = plt.subplots(1, 2, figsize=(12, 6))\n",
    "\n",
    "ax1 = ax[0]\n",
    "for cluster_label in df_cluster_labels_pca.Label.unique():\n",
    "    cluster_data = df_market_data_pca_copy[labels == cluster_label]\n",
    "    \n",
    "    ax1.scatter(cluster_data['PC1'], \n",
    "                cluster_data['PC2'], \n",
    "                label=f'Cluster {cluster_label}')\n",
    "\n",
    "ax1.set_xlabel('x')\n",
    "ax1.set_ylabel('y')\n",
    "ax1.set_title('Cluster Comparison (Applying PCA)')\n",
    "ax1.legend()\n",
    "\n",
    "ax2 = ax[1]\n",
    "for cluster_label in df_clsuter_labels.Label.unique():\n",
    "    cluster_data = scaled_df_copy[labels == cluster_label]\n",
    "    \n",
    "    ax2.scatter(cluster_data['price_change_percentage_24h'], \n",
    "               cluster_data['price_change_percentage_7d'], \n",
    "               label=f'Cluster {cluster_label}')\n",
    "\n",
    "ax2.set_xlabel('x')\n",
    "ax2.set_ylabel('y')\n",
    "ax2.set_title('Cluster Comparison (Original Data)')\n",
    "\n",
    "ax2.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Answer the following question: \n",
    "\n",
    "  * **Question:** After visually analyzing the cluster analysis results, what is the impact of using fewer features to cluster the data using K-Means?\n",
    "\n",
    "  * **Answer:** After visualizing the cluster analysis results, it can be seen that clsuters tend to be more precise and to the point using PCA. PCA redueces the dimensionality of original data and only includes those features that matter the most. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  },
  "nteract": {
   "version": "0.28.0"
  },
  "vscode": {
   "interpreter": {
    "hash": "40d3a090f54c6569ab1632332b64b2c03c39dcf918b08424e98f38b5ae0af88f"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
